
# _parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '44E6723B8C89C9584E2C256D4BB10591'
    
_lr_action_items = {'DEDENT':([1,3,4,5,8,11,12,18,22,24,25,26,30,31,35,38,39,40,41,42,44,45,46,47,],[-8,-7,-16,-10,-9,-6,-21,-17,-4,-15,-12,-11,-18,42,-20,-23,-3,46,47,-5,-26,-22,-14,-19,]),'DOC_START':([0,1,3,4,5,6,8,9,11,12,13,14,18,22,24,25,26,28,30,35,38,39,42,44,45,46,47,],[6,-8,-7,-16,-10,6,-9,6,-6,-21,6,-1,-17,-4,-15,-12,-11,-2,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),'B_MAP_START':([3,12,27,35,38,45,],[21,-21,21,-20,-23,-22,]),'INDENT':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,18,21,22,24,25,26,28,30,35,38,39,42,44,45,46,47,],[13,-8,-7,-16,-10,13,23,-9,13,29,-6,-21,13,-1,-17,-13,-4,-15,-12,-11,-2,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),'B_FOLD_START':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,21,22,23,24,25,26,28,29,30,35,38,39,42,43,44,45,46,47,],[2,-8,-7,-16,-10,2,2,2,2,2,-6,-21,2,-1,2,2,-17,-13,-4,2,-15,-12,-11,-2,2,-18,-20,-23,-3,-5,2,-26,-22,-14,-19,]),'B_LITERAL_END':([19,36,37,],[-24,45,-25,]),'F_SEQUENCE_START':([0,1,3,4,5,6,8,9,11,12,13,14,18,22,23,24,25,26,28,29,30,35,38,39,42,44,45,46,47,],[15,-8,-7,-16,-10,15,-9,15,-6,-21,15,-1,-17,-4,15,-15,-12,-11,-2,15,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),'F_SEQUENCE_END':([12,32,33,34,35,38,45,48,],[-21,-27,-29,44,-20,-23,-22,-28,]),'CAST_TYPE':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,21,22,23,24,25,26,28,29,30,35,38,39,42,43,44,45,46,47,],[16,-8,-7,-16,-10,16,16,16,16,16,-6,-21,16,-1,16,16,-17,-13,-4,16,-15,-12,-11,-2,16,-18,-20,-23,-3,-5,16,-26,-22,-14,-19,]),'SCALAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,29,30,35,36,37,38,39,42,43,44,45,46,47,],[12,-8,19,-7,-16,-10,12,12,12,12,12,-6,-21,12,-1,12,12,19,-17,-24,37,-13,-4,12,-15,-12,-11,-2,12,-18,-20,37,-25,-23,-3,-5,12,-26,-22,-14,-19,]),'B_SEQUENCE_START':([0,1,3,4,5,6,8,9,11,12,13,14,18,22,23,24,25,26,28,29,30,35,38,39,42,44,45,46,47,],[10,10,-7,-16,-10,10,-9,10,-6,-21,10,-1,-17,-4,10,-15,-12,-11,-2,10,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),'B_LITERAL_START':([0,1,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,21,22,23,24,25,26,28,29,30,35,38,39,42,43,44,45,46,47,],[17,-8,-7,-16,-10,17,17,17,17,17,-6,-21,17,-1,17,17,-17,-13,-4,17,-15,-12,-11,-2,17,-18,-20,-23,-3,-5,17,-26,-22,-14,-19,]),'B_FOLD_END':([19,20,37,],[-24,38,-25,]),'DOC_END':([1,3,4,5,8,11,12,18,22,24,25,26,30,35,38,39,42,44,45,46,47,],[-8,-7,-16,-10,-9,-6,-21,-17,39,-15,-12,-11,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),'F_SEP':([12,32,33,34,35,38,45,48,],[-21,-27,-29,43,-20,-23,-22,-28,]),'$end':([1,3,4,5,8,9,11,12,14,18,22,24,25,26,28,30,35,38,39,42,44,45,46,47,],[-8,-7,-16,-10,-9,0,-6,-21,-1,-17,-4,-15,-12,-11,-2,-18,-20,-23,-3,-5,-26,-22,-14,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'flow_sequence_item':([15,43,],[32,48,]),'map':([0,6,9,13,23,29,],[8,8,8,8,8,8,]),'sequence':([0,6,9,13,23,29,],[1,1,1,1,1,1,]),'doc':([0,6,9,13,],[14,22,28,31,]),'collection':([0,6,9,13,23,29,],[11,11,11,11,40,41,]),'map_item_value':([7,],[25,]),'scalar':([0,6,7,8,9,10,13,15,16,23,29,43,],[3,3,24,27,3,30,3,33,35,27,27,33,]),'flow_sequence':([15,],[34,]),'docs':([0,],[9,]),'sequence_item':([0,1,6,9,13,23,29,],[4,18,4,4,4,4,4,]),'map_item_key':([0,6,8,9,13,23,29,],[7,7,7,7,7,7,7,]),'scalar_group':([2,17,],[20,36,]),'map_item':([0,6,8,9,13,23,29,],[5,5,26,5,5,5,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> docs","S'",1,None,None,None),
  ('docs -> doc','docs',1,'p_docs_last','grammar.py',294),
  ('docs -> docs doc','docs',2,'p_docs_init','grammar.py',301),
  ('doc -> DOC_START doc DOC_END','doc',3,'p_doc_indent','grammar.py',308),
  ('doc -> DOC_START doc','doc',2,'p_doc_indent','grammar.py',309),
  ('doc -> INDENT doc DEDENT','doc',3,'p_doc_indent','grammar.py',310),
  ('doc -> collection','doc',1,'p_doc','grammar.py',317),
  ('doc -> scalar','doc',1,'p_doc','grammar.py',318),
  ('collection -> sequence','collection',1,'p_collection','grammar.py',325),
  ('collection -> map','collection',1,'p_collection','grammar.py',326),
  ('map -> map_item','map',1,'p_map_last','grammar.py',333),
  ('map -> map map_item','map',2,'p_map_init','grammar.py',340),
  ('map_item -> map_item_key map_item_value','map_item',2,'p_map_item','grammar.py',347),
  ('map_item_key -> scalar B_MAP_START','map_item_key',2,'p_map_item_key','grammar.py',354),
  ('map_item_value -> INDENT collection DEDENT','map_item_value',3,'p_map_item_value_collection','grammar.py',361),
  ('map_item_value -> scalar','map_item_value',1,'p_map_item_value_scalar','grammar.py',368),
  ('sequence -> sequence_item','sequence',1,'p_sequence_last','grammar.py',375),
  ('sequence -> sequence sequence_item','sequence',2,'p_sequence_init','grammar.py',382),
  ('sequence_item -> B_SEQUENCE_START scalar','sequence_item',2,'p_sequence_item_scalar','grammar.py',389),
  ('sequence_item -> B_SEQUENCE_START INDENT collection DEDENT','sequence_item',4,'p_sequence_item_collection','grammar.py',396),
  ('scalar -> CAST_TYPE scalar','scalar',2,'p_scalar_explicit_cast','grammar.py',403),
  ('scalar -> SCALAR','scalar',1,'p_scalar','grammar.py',410),
  ('scalar -> B_LITERAL_START scalar_group B_LITERAL_END','scalar',3,'p_scalar_literal','grammar.py',417),
  ('scalar -> B_FOLD_START scalar_group B_FOLD_END','scalar',3,'p_scalar_folded','grammar.py',424),
  ('scalar_group -> SCALAR','scalar_group',1,'p_scalar_group','grammar.py',433),
  ('scalar_group -> scalar_group SCALAR','scalar_group',2,'p_scalar_group','grammar.py',434),
  ('sequence -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END','sequence',3,'p_flow_sequence_','grammar.py',445),
  ('flow_sequence -> flow_sequence_item','flow_sequence',1,'p_flow_sequence_last','grammar.py',452),
  ('flow_sequence -> flow_sequence F_SEP flow_sequence_item','flow_sequence',3,'p_flow_sequence_init','grammar.py',459),
  ('flow_sequence_item -> scalar','flow_sequence_item',1,'p_flow_sequence_item','grammar.py',466),
]

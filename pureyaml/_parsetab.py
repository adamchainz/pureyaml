
# _parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '30D876C00A1638353A0FC1939131684D'
    
_lr_action_items = {'DEDENT':([1,4,7,12,13,14,15,17,18,20,21,27,],[-13,-12,-21,-18,-15,23,24,-19,-20,-17,-14,-16,]),'INDENT':([0,1,3,4,7,8,10,12,13,14,15,16,17,18,20,21,23,24,25,27,],[2,-13,2,-12,-21,-6,-7,-18,-15,-9,-11,2,-19,-20,-17,-14,-8,-10,2,-16,]),'DOC_END_INDICATOR':([1,4,7,8,10,12,13,14,15,16,17,18,20,21,23,24,27,],[-13,-12,-21,-6,-7,-18,-15,-9,-11,25,-19,-20,-17,-14,-8,-10,-16,]),'DOC_START_INDICATOR':([0,1,4,7,8,10,12,13,14,15,16,17,18,20,21,23,24,25,27,],[3,-13,-12,-21,-6,-7,-18,-15,-9,-11,3,-19,-20,-17,-14,-8,-10,3,-16,]),'MAP_INDICATOR':([7,10,15,18,22,],[-21,19,19,-20,19,]),'CAST_TYPE':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,25,27,],[9,-13,9,9,-12,9,-21,-6,9,-7,-18,9,-9,-11,9,-19,-20,9,-17,-14,-8,-10,9,-16,]),'SCALAR':([0,1,2,3,4,5,7,8,9,10,12,13,14,15,16,17,18,19,20,21,23,24,25,27,],[7,-13,7,7,-12,7,-21,-6,7,-7,-18,7,-9,-11,7,-19,-20,7,-17,-14,-8,-10,7,-16,]),'SEQUENCE_INDICATOR':([0,1,2,3,4,7,8,10,12,13,14,15,16,17,18,20,21,23,24,25,27,],[5,-13,5,5,-12,-21,-6,-7,5,-15,-9,-11,5,-19,-20,-17,-14,-8,-10,5,-16,]),'$end':([1,4,6,7,8,10,11,12,13,14,15,16,17,18,20,21,23,24,25,26,27,28,],[-13,-12,0,-21,-6,-7,-5,-18,-15,-9,-11,-4,-19,-20,-17,-14,-8,-10,-3,-2,-16,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'map':([0,2,3,13,16,25,],[1,1,1,21,1,1,]),'sequence':([0,2,3,12,16,25,],[4,4,4,20,4,4,]),'doc':([0,3,16,25,],[11,16,11,11,]),'collection':([0,2,3,16,25,],[8,14,8,8,8,]),'scalar':([0,2,3,5,9,13,16,19,25,],[10,15,10,17,18,22,10,27,10,]),'docs':([0,16,25,],[6,26,28,]),'sequence_item':([0,2,3,12,16,25,],[12,12,12,12,12,12,]),'map_item':([0,2,3,13,16,25,],[13,13,13,13,13,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> docs","S'",1,None,None,None),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs','docs',4,'p_docs_init','grammar.py',236),
  ('docs -> DOC_START_INDICATOR doc docs','docs',3,'p_docs_init','grammar.py',237),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR','docs',3,'p_docs_last','grammar.py',263),
  ('docs -> DOC_START_INDICATOR doc','docs',2,'p_docs_last','grammar.py',264),
  ('docs -> doc','docs',1,'p_docs_implicit','grammar.py',270),
  ('doc -> collection','doc',1,'p_doc','grammar.py',276),
  ('doc -> scalar','doc',1,'p_doc','grammar.py',277),
  ('doc -> INDENT collection DEDENT','doc',3,'p_doc_indent','grammar.py',283),
  ('doc -> INDENT collection','doc',2,'p_doc_indent','grammar.py',284),
  ('doc -> INDENT scalar DEDENT','doc',3,'p_doc_indent','grammar.py',285),
  ('doc -> INDENT scalar','doc',2,'p_doc_indent','grammar.py',286),
  ('collection -> sequence','collection',1,'p_collection','grammar.py',292),
  ('collection -> map','collection',1,'p_collection','grammar.py',293),
  ('map -> map_item map','map',2,'p_map_init','grammar.py',299),
  ('map -> map_item','map',1,'p_map_last','grammar.py',305),
  ('map_item -> scalar MAP_INDICATOR scalar','map_item',3,'p_map_item','grammar.py',311),
  ('sequence -> sequence_item sequence','sequence',2,'p_sequence_init','grammar.py',317),
  ('sequence -> sequence_item','sequence',1,'p_sequence_last','grammar.py',323),
  ('sequence_item -> SEQUENCE_INDICATOR scalar','sequence_item',2,'p_sequence_item','grammar.py',329),
  ('scalar -> CAST_TYPE scalar','scalar',2,'p_scalar_explicit_cast','grammar.py',335),
  ('scalar -> SCALAR','scalar',1,'p_scalar_string','grammar.py',368),
]


# _parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'E627B654747187F92F6CF8C88E2AD31B'
    
_lr_action_items = {'DEDENT':([2,3,6,8,9,11,12,19,22,23,24,25,26,29,31,33,34,35,36,37,38,],[-8,-7,-15,-10,-9,-6,-20,-16,-17,-4,-14,-12,-11,36,-19,-22,38,-3,-5,-21,-18,]),'LITERAL_INDICATOR_START':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,28,31,33,35,36,37,38,],[15,-8,-7,15,15,-15,15,-10,15,15,-6,-20,15,-1,15,-16,-13,15,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'FOLD_INDICATOR_START':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,28,31,33,35,36,37,38,],[1,-8,-7,1,1,-15,1,-10,1,1,-6,-20,1,-1,1,-16,-13,1,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'INDENT':([0,2,3,4,5,6,8,9,10,11,12,13,14,19,22,23,24,25,26,28,31,33,35,36,37,38,],[13,-8,-7,21,13,-15,-10,-9,13,-6,-20,13,-1,-16,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'LITERAL_INDICATOR_END':([18,30,32,],[-23,37,-24,]),'MAP_INDICATOR':([3,12,27,31,33,37,],[20,-20,20,-19,-22,-21,]),'FOLD_INDICATOR_END':([17,18,32,],[33,-23,-24,]),'CAST_TYPE':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,16,19,20,21,22,23,24,25,26,28,31,33,35,36,37,38,],[16,-8,-7,16,16,-15,16,-10,16,16,-6,-20,16,-1,16,-16,-13,16,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'SCALAR':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,28,30,31,32,33,35,36,37,38,],[12,18,-8,-7,12,12,-15,12,-10,12,12,-6,-20,12,-1,18,12,32,-23,-16,-13,12,-17,-4,-14,-12,-11,-2,32,-19,-24,-22,-3,-5,-21,-18,]),'SEQUENCE_INDICATOR':([0,2,3,5,6,8,9,10,11,12,13,14,19,21,22,23,24,25,26,28,31,33,35,36,37,38,],[4,4,-7,4,-15,-10,-9,4,-6,-20,4,-1,-16,4,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'DOC_INDICATOR_START':([0,2,3,5,6,8,9,10,11,12,13,14,19,22,23,24,25,26,28,31,33,35,36,37,38,],[5,-8,-7,5,-15,-10,-9,5,-6,-20,5,-1,-16,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),'DOC_INDICATOR_END':([2,3,6,8,9,11,12,19,22,23,24,25,26,31,33,35,36,37,38,],[-8,-7,-15,-10,-9,-6,-20,-16,-17,35,-14,-12,-11,-19,-22,-3,-5,-21,-18,]),'$end':([2,3,6,8,9,10,11,12,14,19,22,23,24,25,26,28,31,33,35,36,37,38,],[-8,-7,-15,-10,-9,0,-6,-20,-1,-16,-17,-4,-14,-12,-11,-2,-19,-22,-3,-5,-21,-18,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'map':([0,5,10,13,21,],[9,9,9,9,9,]),'sequence':([0,5,10,13,21,],[2,2,2,2,2,]),'doc':([0,5,10,13,],[14,23,28,29,]),'collection':([0,5,10,13,21,],[11,11,11,11,34,]),'map_item_value':([7,],[25,]),'scalar':([0,4,5,7,9,10,13,16,21,],[3,22,3,24,27,3,3,31,27,]),'docs':([0,],[10,]),'sequence_item':([0,2,5,10,13,21,],[6,19,6,6,6,6,]),'map_item_key':([0,5,9,10,13,21,],[7,7,7,7,7,7,]),'scalar_group':([1,15,],[17,30,]),'map_item':([0,5,9,10,13,21,],[8,8,26,8,8,8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> docs","S'",1,None,None,None),
  ('docs -> doc','docs',1,'p_docs_last','grammar.py',251),
  ('docs -> docs doc','docs',2,'p_docs_init','grammar.py',258),
  ('doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END','doc',3,'p_doc_indent','grammar.py',265),
  ('doc -> DOC_INDICATOR_START doc','doc',2,'p_doc_indent','grammar.py',266),
  ('doc -> INDENT doc DEDENT','doc',3,'p_doc_indent','grammar.py',267),
  ('doc -> collection','doc',1,'p_doc','grammar.py',274),
  ('doc -> scalar','doc',1,'p_doc','grammar.py',275),
  ('collection -> sequence','collection',1,'p_collection','grammar.py',282),
  ('collection -> map','collection',1,'p_collection','grammar.py',283),
  ('map -> map_item','map',1,'p_map_last','grammar.py',290),
  ('map -> map map_item','map',2,'p_map_init','grammar.py',297),
  ('map_item -> map_item_key map_item_value','map_item',2,'p_map_item','grammar.py',304),
  ('map_item_key -> scalar MAP_INDICATOR','map_item_key',2,'p_map_item_key','grammar.py',311),
  ('map_item_value -> scalar','map_item_value',1,'p_map_item_value','grammar.py',318),
  ('sequence -> sequence_item','sequence',1,'p_sequence_last','grammar.py',325),
  ('sequence -> sequence sequence_item','sequence',2,'p_sequence_init','grammar.py',332),
  ('sequence_item -> SEQUENCE_INDICATOR scalar','sequence_item',2,'p_sequence_item_scalar','grammar.py',339),
  ('sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT','sequence_item',4,'p_sequence_item_collection','grammar.py',346),
  ('scalar -> CAST_TYPE scalar','scalar',2,'p_scalar_explicit_cast','grammar.py',353),
  ('scalar -> SCALAR','scalar',1,'p_scalar','grammar.py',360),
  ('scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END','scalar',3,'p_scalar_literal','grammar.py',367),
  ('scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END','scalar',3,'p_scalar_folded','grammar.py',374),
  ('scalar_group -> SCALAR','scalar_group',1,'p_scalar_group','grammar.py',383),
  ('scalar_group -> scalar_group SCALAR','scalar_group',2,'p_scalar_group','grammar.py',384),
]

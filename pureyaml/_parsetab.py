
# _parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '0F573862C020D1A67C3F1550BD759B0A'
    
_lr_action_items = {'DEDENT':([1,3,5,6,8,12,14,15,17,18,20,22,23,25,30,],[-11,-22,-10,-20,-19,-21,-16,-13,26,27,-18,-15,-12,-17,-14,]),'INDENT':([0,1,3,4,5,6,8,9,11,12,14,15,19,20,22,23,25,26,27,28,30,],[2,-11,-22,2,-10,-20,-19,-6,-7,-21,-16,-13,2,-18,-15,-12,-17,-8,-9,2,-14,]),'STRING':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,19,20,21,22,23,25,26,27,28,30,],[3,-11,3,-22,3,-10,-20,-19,-6,3,-7,-21,-16,3,3,3,-18,3,-15,-12,-17,-8,-9,3,-14,]),'DOC_START_INDICATOR':([0,1,3,5,6,8,9,11,12,14,15,19,20,22,23,25,26,27,28,30,],[4,-11,-22,-10,-20,-19,-6,-7,-21,-16,-13,4,-18,-15,-12,-17,-8,-9,4,-14,]),'INT':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,19,20,21,22,23,25,26,27,28,30,],[6,-11,6,-22,6,-10,-20,-19,-6,6,-7,-21,-16,6,6,6,-18,6,-15,-12,-17,-8,-9,6,-14,]),'FLOAT':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,19,20,21,22,23,25,26,27,28,30,],[8,-11,8,-22,8,-10,-20,-19,-6,8,-7,-21,-16,8,8,8,-18,8,-15,-12,-17,-8,-9,8,-14,]),'MAP_INDICATOR':([3,6,8,11,12,18,20,24,],[-22,-20,-19,21,-21,21,-18,21,]),'DOC_END_INDICATOR':([1,3,5,6,8,9,11,12,14,15,19,20,22,23,25,26,27,30,],[-11,-22,-10,-20,-19,-6,-7,-21,-16,-13,28,-18,-15,-12,-17,-8,-9,-14,]),'CAST_TYPE':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,19,20,21,22,23,25,26,27,28,30,],[10,-11,10,-22,10,-10,-20,-19,-6,10,-7,-21,-16,10,10,10,-18,10,-15,-12,-17,-8,-9,10,-14,]),'SEQUENCE_INDICATOR':([0,1,2,3,4,5,6,8,9,11,12,14,15,19,20,22,23,25,26,27,28,30,],[16,-11,16,-22,16,-10,-20,-19,-6,-7,-21,16,-13,16,-18,-15,-12,-17,-8,-9,16,-14,]),'BOOL':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,19,20,21,22,23,25,26,27,28,30,],[12,-11,12,-22,12,-10,-20,-19,-6,12,-7,-21,-16,12,12,12,-18,12,-15,-12,-17,-8,-9,12,-14,]),'$end':([1,3,5,6,7,8,9,11,12,13,14,15,19,20,22,23,25,26,27,28,29,30,31,],[-11,-22,-10,-20,0,-19,-6,-7,-21,-5,-16,-13,-4,-18,-15,-12,-17,-8,-9,-3,-2,-14,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'map':([0,2,4,15,19,28,],[1,1,1,23,1,1,]),'sequence':([0,2,4,14,19,28,],[5,5,5,22,5,5,]),'doc':([0,4,19,28,],[13,19,13,13,]),'collection':([0,2,4,19,28,],[9,17,9,9,9,]),'scalar':([0,2,4,10,15,16,19,21,28,],[11,18,11,20,24,25,11,30,11,]),'docs':([0,19,28,],[7,29,31,]),'sequence_item':([0,2,4,14,19,28,],[14,14,14,14,14,14,]),'map_item':([0,2,4,15,19,28,],[15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> docs","S'",1,None,None,None),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs','docs',4,'p_docs_init','grammar.py',240),
  ('docs -> DOC_START_INDICATOR doc docs','docs',3,'p_docs_init','grammar.py',241),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR','docs',3,'p_docs_last','grammar.py',268),
  ('docs -> DOC_START_INDICATOR doc','docs',2,'p_docs_last','grammar.py',269),
  ('docs -> doc','docs',1,'p_docs_implicit','grammar.py',275),
  ('doc -> collection','doc',1,'p_doc','grammar.py',281),
  ('doc -> scalar','doc',1,'p_doc','grammar.py',282),
  ('doc -> INDENT collection DEDENT','doc',3,'p_doc_indent','grammar.py',288),
  ('doc -> INDENT scalar DEDENT','doc',3,'p_doc_indent','grammar.py',289),
  ('collection -> sequence','collection',1,'p_collection','grammar.py',295),
  ('collection -> map','collection',1,'p_collection','grammar.py',296),
  ('map -> map_item map','map',2,'p_map_init','grammar.py',302),
  ('map -> map_item','map',1,'p_map_last','grammar.py',308),
  ('map_item -> scalar MAP_INDICATOR scalar','map_item',3,'p_map_item','grammar.py',314),
  ('sequence -> sequence_item sequence','sequence',2,'p_sequence_init','grammar.py',320),
  ('sequence -> sequence_item','sequence',1,'p_sequence_last','grammar.py',326),
  ('sequence_item -> SEQUENCE_INDICATOR scalar','sequence_item',2,'p_sequence_item','grammar.py',332),
  ('scalar -> CAST_TYPE scalar','scalar',2,'p_scalar_explicit_cast','grammar.py',338),
  ('scalar -> FLOAT','scalar',1,'p_scalar_float','grammar.py',345),
  ('scalar -> INT','scalar',1,'p_scalar_int','grammar.py',352),
  ('scalar -> BOOL','scalar',1,'p_scalar_bool','grammar.py',359),
  ('scalar -> STRING','scalar',1,'p_scalar_string','grammar.py',372),
]


# _parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'A68760C876E7BE7902428F253EB3F234'
    
_lr_action_items = {'DEDENT':([1,4,5,7,8,12,14,15,17,18,20,22,23,25,30,],[-13,-12,-22,-21,-24,-23,-18,-15,26,27,-20,-17,-14,-19,-16,]),'INDENT':([0,1,3,4,5,7,8,9,11,12,14,15,17,18,19,20,22,23,25,26,27,28,30,],[2,-13,2,-12,-22,-21,-24,-6,-7,-23,-18,-15,-9,-11,2,-20,-17,-14,-19,-8,-10,2,-16,]),'DOC_END_INDICATOR':([1,4,5,7,8,9,11,12,14,15,17,18,19,20,22,23,25,26,27,30,],[-13,-12,-22,-21,-24,-6,-7,-23,-18,-15,-9,-11,28,-20,-17,-14,-19,-8,-10,-16,]),'DOC_START_INDICATOR':([0,1,4,5,7,8,9,11,12,14,15,17,18,19,20,22,23,25,26,27,28,30,],[3,-13,-12,-22,-21,-24,-6,-7,-23,-18,-15,-9,-11,3,-20,-17,-14,-19,-8,-10,3,-16,]),'INT':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,30,],[5,-13,5,5,-12,-22,-21,-24,-6,5,-7,-23,-18,5,5,-9,-11,5,-20,5,-17,-14,-19,-8,-10,5,-16,]),'FLOAT':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,30,],[7,-13,7,7,-12,-22,-21,-24,-6,7,-7,-23,-18,7,7,-9,-11,7,-20,7,-17,-14,-19,-8,-10,7,-16,]),'MAP_INDICATOR':([5,7,8,11,12,18,20,24,],[-22,-21,-24,21,-23,21,-20,21,]),'CAST_TYPE':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,30,],[10,-13,10,10,-12,-22,-21,-24,-6,10,-7,-23,-18,10,10,-9,-11,10,-20,10,-17,-14,-19,-8,-10,10,-16,]),'SCALAR':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,30,],[8,-13,8,8,-12,-22,-21,-24,-6,8,-7,-23,-18,8,8,-9,-11,8,-20,8,-17,-14,-19,-8,-10,8,-16,]),'SEQUENCE_INDICATOR':([0,1,2,3,4,5,7,8,9,11,12,14,15,17,18,19,20,22,23,25,26,27,28,30,],[16,-13,16,16,-12,-22,-21,-24,-6,-7,-23,16,-15,-9,-11,16,-20,-17,-14,-19,-8,-10,16,-16,]),'BOOL':([0,1,2,3,4,5,7,8,9,10,11,12,14,15,16,17,18,19,20,21,22,23,25,26,27,28,30,],[12,-13,12,12,-12,-22,-21,-24,-6,12,-7,-23,-18,12,12,-9,-11,12,-20,12,-17,-14,-19,-8,-10,12,-16,]),'$end':([1,4,5,6,7,8,9,11,12,13,14,15,17,18,19,20,22,23,25,26,27,28,29,30,31,],[-13,-12,-22,0,-21,-24,-6,-7,-23,-5,-18,-15,-9,-11,-4,-20,-17,-14,-19,-8,-10,-3,-2,-16,-1,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'map':([0,2,3,15,19,28,],[1,1,1,23,1,1,]),'sequence':([0,2,3,14,19,28,],[4,4,4,22,4,4,]),'doc':([0,3,19,28,],[13,19,13,13,]),'collection':([0,2,3,19,28,],[9,17,9,9,9,]),'scalar':([0,2,3,10,15,16,19,21,28,],[11,18,11,20,24,25,11,30,11,]),'docs':([0,19,28,],[6,29,31,]),'sequence_item':([0,2,3,14,19,28,],[14,14,14,14,14,14,]),'map_item':([0,2,3,15,19,28,],[15,15,15,15,15,15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> docs","S'",1,None,None,None),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs','docs',4,'p_docs_init','grammar.py',236),
  ('docs -> DOC_START_INDICATOR doc docs','docs',3,'p_docs_init','grammar.py',237),
  ('docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR','docs',3,'p_docs_last','grammar.py',263),
  ('docs -> DOC_START_INDICATOR doc','docs',2,'p_docs_last','grammar.py',264),
  ('docs -> doc','docs',1,'p_docs_implicit','grammar.py',270),
  ('doc -> collection','doc',1,'p_doc','grammar.py',276),
  ('doc -> scalar','doc',1,'p_doc','grammar.py',277),
  ('doc -> INDENT collection DEDENT','doc',3,'p_doc_indent','grammar.py',283),
  ('doc -> INDENT collection','doc',2,'p_doc_indent','grammar.py',284),
  ('doc -> INDENT scalar DEDENT','doc',3,'p_doc_indent','grammar.py',285),
  ('doc -> INDENT scalar','doc',2,'p_doc_indent','grammar.py',286),
  ('collection -> sequence','collection',1,'p_collection','grammar.py',292),
  ('collection -> map','collection',1,'p_collection','grammar.py',293),
  ('map -> map_item map','map',2,'p_map_init','grammar.py',299),
  ('map -> map_item','map',1,'p_map_last','grammar.py',305),
  ('map_item -> scalar MAP_INDICATOR scalar','map_item',3,'p_map_item','grammar.py',311),
  ('sequence -> sequence_item sequence','sequence',2,'p_sequence_init','grammar.py',317),
  ('sequence -> sequence_item','sequence',1,'p_sequence_last','grammar.py',323),
  ('sequence_item -> SEQUENCE_INDICATOR scalar','sequence_item',2,'p_sequence_item','grammar.py',329),
  ('scalar -> CAST_TYPE scalar','scalar',2,'p_scalar_explicit_cast','grammar.py',335),
  ('scalar -> FLOAT','scalar',1,'p_scalar_float','grammar.py',342),
  ('scalar -> INT','scalar',1,'p_scalar_int','grammar.py',349),
  ('scalar -> BOOL','scalar',1,'p_scalar_bool','grammar.py',356),
  ('scalar -> SCALAR','scalar',1,'p_scalar_string','grammar.py',368),
]

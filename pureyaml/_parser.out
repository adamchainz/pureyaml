Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> docs
Rule 1     docs -> doc
Rule 2     docs -> docs doc
Rule 3     doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END
Rule 4     doc -> DOC_INDICATOR_START doc
Rule 5     doc -> INDENT doc DEDENT
Rule 6     doc -> collection
Rule 7     doc -> scalar
Rule 8     collection -> sequence
Rule 9     collection -> map
Rule 10    map -> map_item
Rule 11    map -> map map_item
Rule 12    map_item -> map_item_key map_item_value
Rule 13    map_item_key -> scalar MAP_INDICATOR
Rule 14    map_item_value -> scalar
Rule 15    sequence -> sequence_item
Rule 16    sequence -> sequence sequence_item
Rule 17    sequence_item -> SEQUENCE_INDICATOR scalar
Rule 18    sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT
Rule 19    scalar -> CAST_TYPE scalar
Rule 20    scalar -> SCALAR
Rule 21    scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
Rule 22    scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
Rule 23    scalar_group -> SCALAR
Rule 24    scalar_group -> scalar_group SCALAR

Terminals, with rules where they appear

CAST_TYPE            : 19
DEDENT               : 5 18
DOC_INDICATOR_END    : 3
DOC_INDICATOR_START  : 3 4
FOLD_INDICATOR_END   : 22
FOLD_INDICATOR_START : 22
INDENT               : 5 18
LITERAL_INDICATOR_END : 21
LITERAL_INDICATOR_START : 21
MAP_INDICATOR        : 13
SCALAR               : 20 23 24
SEQUENCE_INDICATOR   : 17 18
error                : 

Nonterminals, with rules where they appear

collection           : 6 18
doc                  : 1 2 3 4 5
docs                 : 2 0
map                  : 9 11
map_item             : 10 11
map_item_key         : 12
map_item_value       : 12
scalar               : 7 13 14 17 19
scalar_group         : 21 22 24
sequence             : 8 16
sequence_item        : 15 16

Parsing method: LALR

state 0

    (0) S' -> . docs
    (1) docs -> . doc
    (2) docs -> . docs doc
    (3) doc -> . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) doc -> . DOC_INDICATOR_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (15) sequence -> . sequence_item
    (16) sequence -> . sequence sequence_item
    (10) map -> . map_item
    (11) map -> . map map_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR

    DOC_INDICATOR_START shift and go to state 5
    INDENT          shift and go to state 13
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1
    SEQUENCE_INDICATOR shift and go to state 4

    map                            shift and go to state 9
    sequence                       shift and go to state 2
    docs                           shift and go to state 10
    collection                     shift and go to state 11
    scalar                         shift and go to state 3
    map_item_key                   shift and go to state 7
    doc                            shift and go to state 14
    sequence_item                  shift and go to state 6
    map_item                       shift and go to state 8

state 1

    (22) scalar -> FOLD_INDICATOR_START . scalar_group FOLD_INDICATOR_END
    (23) scalar_group -> . SCALAR
    (24) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 18

    scalar_group                   shift and go to state 17

state 2

    (8) collection -> sequence .
    (16) sequence -> sequence . sequence_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT

  ! shift/reduce conflict for SEQUENCE_INDICATOR resolved as shift
    DOC_INDICATOR_END reduce using rule 8 (collection -> sequence .)
    DOC_INDICATOR_START reduce using rule 8 (collection -> sequence .)
    INDENT          reduce using rule 8 (collection -> sequence .)
    CAST_TYPE       reduce using rule 8 (collection -> sequence .)
    SCALAR          reduce using rule 8 (collection -> sequence .)
    LITERAL_INDICATOR_START reduce using rule 8 (collection -> sequence .)
    FOLD_INDICATOR_START reduce using rule 8 (collection -> sequence .)
    $end            reduce using rule 8 (collection -> sequence .)
    DEDENT          reduce using rule 8 (collection -> sequence .)
    SEQUENCE_INDICATOR shift and go to state 4

  ! SEQUENCE_INDICATOR [ reduce using rule 8 (collection -> sequence .) ]

    sequence_item                  shift and go to state 19

state 3

    (7) doc -> scalar .
    (13) map_item_key -> scalar . MAP_INDICATOR

    DEDENT          reduce using rule 7 (doc -> scalar .)
    DOC_INDICATOR_START reduce using rule 7 (doc -> scalar .)
    INDENT          reduce using rule 7 (doc -> scalar .)
    CAST_TYPE       reduce using rule 7 (doc -> scalar .)
    SCALAR          reduce using rule 7 (doc -> scalar .)
    LITERAL_INDICATOR_START reduce using rule 7 (doc -> scalar .)
    FOLD_INDICATOR_START reduce using rule 7 (doc -> scalar .)
    SEQUENCE_INDICATOR reduce using rule 7 (doc -> scalar .)
    $end            reduce using rule 7 (doc -> scalar .)
    DOC_INDICATOR_END reduce using rule 7 (doc -> scalar .)
    MAP_INDICATOR   shift and go to state 20


state 4

    (17) sequence_item -> SEQUENCE_INDICATOR . scalar
    (18) sequence_item -> SEQUENCE_INDICATOR . INDENT collection DEDENT
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    INDENT          shift and go to state 21
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1

    scalar                         shift and go to state 22

state 5

    (3) doc -> DOC_INDICATOR_START . doc DOC_INDICATOR_END
    (4) doc -> DOC_INDICATOR_START . doc
    (3) doc -> . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) doc -> . DOC_INDICATOR_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (15) sequence -> . sequence_item
    (16) sequence -> . sequence sequence_item
    (10) map -> . map_item
    (11) map -> . map map_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR

    DOC_INDICATOR_START shift and go to state 5
    INDENT          shift and go to state 13
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1
    SEQUENCE_INDICATOR shift and go to state 4

    map                            shift and go to state 9
    sequence                       shift and go to state 2
    doc                            shift and go to state 23
    collection                     shift and go to state 11
    scalar                         shift and go to state 3
    map_item_key                   shift and go to state 7
    sequence_item                  shift and go to state 6
    map_item                       shift and go to state 8

state 6

    (15) sequence -> sequence_item .

    SEQUENCE_INDICATOR reduce using rule 15 (sequence -> sequence_item .)
    DOC_INDICATOR_START reduce using rule 15 (sequence -> sequence_item .)
    INDENT          reduce using rule 15 (sequence -> sequence_item .)
    CAST_TYPE       reduce using rule 15 (sequence -> sequence_item .)
    SCALAR          reduce using rule 15 (sequence -> sequence_item .)
    LITERAL_INDICATOR_START reduce using rule 15 (sequence -> sequence_item .)
    FOLD_INDICATOR_START reduce using rule 15 (sequence -> sequence_item .)
    $end            reduce using rule 15 (sequence -> sequence_item .)
    DOC_INDICATOR_END reduce using rule 15 (sequence -> sequence_item .)
    DEDENT          reduce using rule 15 (sequence -> sequence_item .)


state 7

    (12) map_item -> map_item_key . map_item_value
    (14) map_item_value -> . scalar
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1

    map_item_value                 shift and go to state 25
    scalar                         shift and go to state 24

state 8

    (10) map -> map_item .

    CAST_TYPE       reduce using rule 10 (map -> map_item .)
    SCALAR          reduce using rule 10 (map -> map_item .)
    LITERAL_INDICATOR_START reduce using rule 10 (map -> map_item .)
    FOLD_INDICATOR_START reduce using rule 10 (map -> map_item .)
    DOC_INDICATOR_START reduce using rule 10 (map -> map_item .)
    INDENT          reduce using rule 10 (map -> map_item .)
    SEQUENCE_INDICATOR reduce using rule 10 (map -> map_item .)
    $end            reduce using rule 10 (map -> map_item .)
    DEDENT          reduce using rule 10 (map -> map_item .)
    DOC_INDICATOR_END reduce using rule 10 (map -> map_item .)


state 9

    (9) collection -> map .
    (11) map -> map . map_item
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

  ! shift/reduce conflict for CAST_TYPE resolved as shift
  ! shift/reduce conflict for SCALAR resolved as shift
  ! shift/reduce conflict for LITERAL_INDICATOR_START resolved as shift
  ! shift/reduce conflict for FOLD_INDICATOR_START resolved as shift
    DOC_INDICATOR_END reduce using rule 9 (collection -> map .)
    DOC_INDICATOR_START reduce using rule 9 (collection -> map .)
    INDENT          reduce using rule 9 (collection -> map .)
    SEQUENCE_INDICATOR reduce using rule 9 (collection -> map .)
    $end            reduce using rule 9 (collection -> map .)
    DEDENT          reduce using rule 9 (collection -> map .)
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1

  ! CAST_TYPE       [ reduce using rule 9 (collection -> map .) ]
  ! SCALAR          [ reduce using rule 9 (collection -> map .) ]
  ! LITERAL_INDICATOR_START [ reduce using rule 9 (collection -> map .) ]
  ! FOLD_INDICATOR_START [ reduce using rule 9 (collection -> map .) ]

    map_item                       shift and go to state 26
    scalar                         shift and go to state 27
    map_item_key                   shift and go to state 7

state 10

    (0) S' -> docs .
    (2) docs -> docs . doc
    (3) doc -> . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) doc -> . DOC_INDICATOR_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (15) sequence -> . sequence_item
    (16) sequence -> . sequence sequence_item
    (10) map -> . map_item
    (11) map -> . map map_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR

    DOC_INDICATOR_START shift and go to state 5
    INDENT          shift and go to state 13
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1
    SEQUENCE_INDICATOR shift and go to state 4

    map                            shift and go to state 9
    sequence                       shift and go to state 2
    collection                     shift and go to state 11
    scalar                         shift and go to state 3
    map_item_key                   shift and go to state 7
    doc                            shift and go to state 28
    sequence_item                  shift and go to state 6
    map_item                       shift and go to state 8

state 11

    (6) doc -> collection .

    DEDENT          reduce using rule 6 (doc -> collection .)
    DOC_INDICATOR_START reduce using rule 6 (doc -> collection .)
    INDENT          reduce using rule 6 (doc -> collection .)
    CAST_TYPE       reduce using rule 6 (doc -> collection .)
    SCALAR          reduce using rule 6 (doc -> collection .)
    LITERAL_INDICATOR_START reduce using rule 6 (doc -> collection .)
    FOLD_INDICATOR_START reduce using rule 6 (doc -> collection .)
    SEQUENCE_INDICATOR reduce using rule 6 (doc -> collection .)
    $end            reduce using rule 6 (doc -> collection .)
    DOC_INDICATOR_END reduce using rule 6 (doc -> collection .)


state 12

    (20) scalar -> SCALAR .

    SEQUENCE_INDICATOR reduce using rule 20 (scalar -> SCALAR .)
    DOC_INDICATOR_START reduce using rule 20 (scalar -> SCALAR .)
    INDENT          reduce using rule 20 (scalar -> SCALAR .)
    CAST_TYPE       reduce using rule 20 (scalar -> SCALAR .)
    SCALAR          reduce using rule 20 (scalar -> SCALAR .)
    LITERAL_INDICATOR_START reduce using rule 20 (scalar -> SCALAR .)
    FOLD_INDICATOR_START reduce using rule 20 (scalar -> SCALAR .)
    $end            reduce using rule 20 (scalar -> SCALAR .)
    DOC_INDICATOR_END reduce using rule 20 (scalar -> SCALAR .)
    DEDENT          reduce using rule 20 (scalar -> SCALAR .)
    MAP_INDICATOR   reduce using rule 20 (scalar -> SCALAR .)


state 13

    (5) doc -> INDENT . doc DEDENT
    (3) doc -> . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) doc -> . DOC_INDICATOR_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (15) sequence -> . sequence_item
    (16) sequence -> . sequence sequence_item
    (10) map -> . map_item
    (11) map -> . map map_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR

    DOC_INDICATOR_START shift and go to state 5
    INDENT          shift and go to state 13
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1
    SEQUENCE_INDICATOR shift and go to state 4

    map                            shift and go to state 9
    sequence                       shift and go to state 2
    doc                            shift and go to state 29
    collection                     shift and go to state 11
    scalar                         shift and go to state 3
    map_item_key                   shift and go to state 7
    sequence_item                  shift and go to state 6
    map_item                       shift and go to state 8

state 14

    (1) docs -> doc .

    DOC_INDICATOR_START reduce using rule 1 (docs -> doc .)
    INDENT          reduce using rule 1 (docs -> doc .)
    CAST_TYPE       reduce using rule 1 (docs -> doc .)
    SCALAR          reduce using rule 1 (docs -> doc .)
    LITERAL_INDICATOR_START reduce using rule 1 (docs -> doc .)
    FOLD_INDICATOR_START reduce using rule 1 (docs -> doc .)
    SEQUENCE_INDICATOR reduce using rule 1 (docs -> doc .)
    $end            reduce using rule 1 (docs -> doc .)


state 15

    (21) scalar -> LITERAL_INDICATOR_START . scalar_group LITERAL_INDICATOR_END
    (23) scalar_group -> . SCALAR
    (24) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 18

    scalar_group                   shift and go to state 30

state 16

    (19) scalar -> CAST_TYPE . scalar
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1

    scalar                         shift and go to state 31

state 17

    (22) scalar -> FOLD_INDICATOR_START scalar_group . FOLD_INDICATOR_END
    (24) scalar_group -> scalar_group . SCALAR

    FOLD_INDICATOR_END shift and go to state 33
    SCALAR          shift and go to state 32


state 18

    (23) scalar_group -> SCALAR .

    LITERAL_INDICATOR_END reduce using rule 23 (scalar_group -> SCALAR .)
    SCALAR          reduce using rule 23 (scalar_group -> SCALAR .)
    FOLD_INDICATOR_END reduce using rule 23 (scalar_group -> SCALAR .)


state 19

    (16) sequence -> sequence sequence_item .

    SEQUENCE_INDICATOR reduce using rule 16 (sequence -> sequence sequence_item .)
    DOC_INDICATOR_START reduce using rule 16 (sequence -> sequence sequence_item .)
    INDENT          reduce using rule 16 (sequence -> sequence sequence_item .)
    CAST_TYPE       reduce using rule 16 (sequence -> sequence sequence_item .)
    SCALAR          reduce using rule 16 (sequence -> sequence sequence_item .)
    LITERAL_INDICATOR_START reduce using rule 16 (sequence -> sequence sequence_item .)
    FOLD_INDICATOR_START reduce using rule 16 (sequence -> sequence sequence_item .)
    $end            reduce using rule 16 (sequence -> sequence sequence_item .)
    DOC_INDICATOR_END reduce using rule 16 (sequence -> sequence sequence_item .)
    DEDENT          reduce using rule 16 (sequence -> sequence sequence_item .)


state 20

    (13) map_item_key -> scalar MAP_INDICATOR .

    CAST_TYPE       reduce using rule 13 (map_item_key -> scalar MAP_INDICATOR .)
    SCALAR          reduce using rule 13 (map_item_key -> scalar MAP_INDICATOR .)
    LITERAL_INDICATOR_START reduce using rule 13 (map_item_key -> scalar MAP_INDICATOR .)
    FOLD_INDICATOR_START reduce using rule 13 (map_item_key -> scalar MAP_INDICATOR .)


state 21

    (18) sequence_item -> SEQUENCE_INDICATOR INDENT . collection DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (15) sequence -> . sequence_item
    (16) sequence -> . sequence sequence_item
    (10) map -> . map_item
    (11) map -> . map map_item
    (17) sequence_item -> . SEQUENCE_INDICATOR scalar
    (18) sequence_item -> . SEQUENCE_INDICATOR INDENT collection DEDENT
    (12) map_item -> . map_item_key map_item_value
    (13) map_item_key -> . scalar MAP_INDICATOR
    (19) scalar -> . CAST_TYPE scalar
    (20) scalar -> . SCALAR
    (21) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (22) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    SEQUENCE_INDICATOR shift and go to state 4
    CAST_TYPE       shift and go to state 16
    SCALAR          shift and go to state 12
    LITERAL_INDICATOR_START shift and go to state 15
    FOLD_INDICATOR_START shift and go to state 1

    map                            shift and go to state 9
    sequence                       shift and go to state 2
    map_item_key                   shift and go to state 7
    collection                     shift and go to state 34
    scalar                         shift and go to state 27
    sequence_item                  shift and go to state 6
    map_item                       shift and go to state 8

state 22

    (17) sequence_item -> SEQUENCE_INDICATOR scalar .

    SEQUENCE_INDICATOR reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DEDENT          reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DOC_INDICATOR_END reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DOC_INDICATOR_START reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    INDENT          reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    CAST_TYPE       reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    SCALAR          reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    LITERAL_INDICATOR_START reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    FOLD_INDICATOR_START reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    $end            reduce using rule 17 (sequence_item -> SEQUENCE_INDICATOR scalar .)


state 23

    (3) doc -> DOC_INDICATOR_START doc . DOC_INDICATOR_END
    (4) doc -> DOC_INDICATOR_START doc .

  ! shift/reduce conflict for DOC_INDICATOR_END resolved as shift
    DOC_INDICATOR_END shift and go to state 35
    DEDENT          reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    DOC_INDICATOR_START reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    INDENT          reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    CAST_TYPE       reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    SCALAR          reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    LITERAL_INDICATOR_START reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    FOLD_INDICATOR_START reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    SEQUENCE_INDICATOR reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)
    $end            reduce using rule 4 (doc -> DOC_INDICATOR_START doc .)

  ! DOC_INDICATOR_END [ reduce using rule 4 (doc -> DOC_INDICATOR_START doc .) ]


state 24

    (14) map_item_value -> scalar .

    CAST_TYPE       reduce using rule 14 (map_item_value -> scalar .)
    SCALAR          reduce using rule 14 (map_item_value -> scalar .)
    LITERAL_INDICATOR_START reduce using rule 14 (map_item_value -> scalar .)
    FOLD_INDICATOR_START reduce using rule 14 (map_item_value -> scalar .)
    DOC_INDICATOR_START reduce using rule 14 (map_item_value -> scalar .)
    INDENT          reduce using rule 14 (map_item_value -> scalar .)
    SEQUENCE_INDICATOR reduce using rule 14 (map_item_value -> scalar .)
    $end            reduce using rule 14 (map_item_value -> scalar .)
    DOC_INDICATOR_END reduce using rule 14 (map_item_value -> scalar .)
    DEDENT          reduce using rule 14 (map_item_value -> scalar .)


state 25

    (12) map_item -> map_item_key map_item_value .

    CAST_TYPE       reduce using rule 12 (map_item -> map_item_key map_item_value .)
    SCALAR          reduce using rule 12 (map_item -> map_item_key map_item_value .)
    LITERAL_INDICATOR_START reduce using rule 12 (map_item -> map_item_key map_item_value .)
    FOLD_INDICATOR_START reduce using rule 12 (map_item -> map_item_key map_item_value .)
    DEDENT          reduce using rule 12 (map_item -> map_item_key map_item_value .)
    DOC_INDICATOR_START reduce using rule 12 (map_item -> map_item_key map_item_value .)
    INDENT          reduce using rule 12 (map_item -> map_item_key map_item_value .)
    SEQUENCE_INDICATOR reduce using rule 12 (map_item -> map_item_key map_item_value .)
    $end            reduce using rule 12 (map_item -> map_item_key map_item_value .)
    DOC_INDICATOR_END reduce using rule 12 (map_item -> map_item_key map_item_value .)


state 26

    (11) map -> map map_item .

    CAST_TYPE       reduce using rule 11 (map -> map map_item .)
    SCALAR          reduce using rule 11 (map -> map map_item .)
    LITERAL_INDICATOR_START reduce using rule 11 (map -> map map_item .)
    FOLD_INDICATOR_START reduce using rule 11 (map -> map map_item .)
    DOC_INDICATOR_START reduce using rule 11 (map -> map map_item .)
    INDENT          reduce using rule 11 (map -> map map_item .)
    SEQUENCE_INDICATOR reduce using rule 11 (map -> map map_item .)
    $end            reduce using rule 11 (map -> map map_item .)
    DEDENT          reduce using rule 11 (map -> map map_item .)
    DOC_INDICATOR_END reduce using rule 11 (map -> map map_item .)


state 27

    (13) map_item_key -> scalar . MAP_INDICATOR

    MAP_INDICATOR   shift and go to state 20


state 28

    (2) docs -> docs doc .

    DOC_INDICATOR_START reduce using rule 2 (docs -> docs doc .)
    INDENT          reduce using rule 2 (docs -> docs doc .)
    CAST_TYPE       reduce using rule 2 (docs -> docs doc .)
    SCALAR          reduce using rule 2 (docs -> docs doc .)
    LITERAL_INDICATOR_START reduce using rule 2 (docs -> docs doc .)
    FOLD_INDICATOR_START reduce using rule 2 (docs -> docs doc .)
    SEQUENCE_INDICATOR reduce using rule 2 (docs -> docs doc .)
    $end            reduce using rule 2 (docs -> docs doc .)


state 29

    (5) doc -> INDENT doc . DEDENT

    DEDENT          shift and go to state 36


state 30

    (21) scalar -> LITERAL_INDICATOR_START scalar_group . LITERAL_INDICATOR_END
    (24) scalar_group -> scalar_group . SCALAR

    LITERAL_INDICATOR_END shift and go to state 37
    SCALAR          shift and go to state 32


state 31

    (19) scalar -> CAST_TYPE scalar .

    SEQUENCE_INDICATOR reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    DOC_INDICATOR_START reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    INDENT          reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    CAST_TYPE       reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    SCALAR          reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    LITERAL_INDICATOR_START reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    FOLD_INDICATOR_START reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    $end            reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    DOC_INDICATOR_END reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    DEDENT          reduce using rule 19 (scalar -> CAST_TYPE scalar .)
    MAP_INDICATOR   reduce using rule 19 (scalar -> CAST_TYPE scalar .)


state 32

    (24) scalar_group -> scalar_group SCALAR .

    LITERAL_INDICATOR_END reduce using rule 24 (scalar_group -> scalar_group SCALAR .)
    SCALAR          reduce using rule 24 (scalar_group -> scalar_group SCALAR .)
    FOLD_INDICATOR_END reduce using rule 24 (scalar_group -> scalar_group SCALAR .)


state 33

    (22) scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .

    SEQUENCE_INDICATOR reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DOC_INDICATOR_START reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    INDENT          reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    CAST_TYPE       reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    SCALAR          reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    LITERAL_INDICATOR_START reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    FOLD_INDICATOR_START reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    $end            reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DOC_INDICATOR_END reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DEDENT          reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    MAP_INDICATOR   reduce using rule 22 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)


state 34

    (18) sequence_item -> SEQUENCE_INDICATOR INDENT collection . DEDENT

    DEDENT          shift and go to state 38


state 35

    (3) doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .

    DEDENT          reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    DOC_INDICATOR_START reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    INDENT          reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    CAST_TYPE       reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    SCALAR          reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    LITERAL_INDICATOR_START reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    FOLD_INDICATOR_START reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    SEQUENCE_INDICATOR reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    $end            reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    DOC_INDICATOR_END reduce using rule 3 (doc -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)


state 36

    (5) doc -> INDENT doc DEDENT .

    DEDENT          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    DOC_INDICATOR_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    INDENT          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    CAST_TYPE       reduce using rule 5 (doc -> INDENT doc DEDENT .)
    SCALAR          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    LITERAL_INDICATOR_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    FOLD_INDICATOR_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    SEQUENCE_INDICATOR reduce using rule 5 (doc -> INDENT doc DEDENT .)
    $end            reduce using rule 5 (doc -> INDENT doc DEDENT .)
    DOC_INDICATOR_END reduce using rule 5 (doc -> INDENT doc DEDENT .)


state 37

    (21) scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .

    SEQUENCE_INDICATOR reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DOC_INDICATOR_START reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    INDENT          reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    CAST_TYPE       reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    SCALAR          reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    LITERAL_INDICATOR_START reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    FOLD_INDICATOR_START reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    $end            reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DOC_INDICATOR_END reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DEDENT          reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    MAP_INDICATOR   reduce using rule 21 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)


state 38

    (18) sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .

    SEQUENCE_INDICATOR reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    DEDENT          reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    DOC_INDICATOR_END reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    DOC_INDICATOR_START reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    INDENT          reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    CAST_TYPE       reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    SCALAR          reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    LITERAL_INDICATOR_START reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    FOLD_INDICATOR_START reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)
    $end            reduce using rule 18 (sequence_item -> SEQUENCE_INDICATOR INDENT collection DEDENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEQUENCE_INDICATOR in state 2 resolved as shift
WARNING: shift/reduce conflict for CAST_TYPE in state 9 resolved as shift
WARNING: shift/reduce conflict for SCALAR in state 9 resolved as shift
WARNING: shift/reduce conflict for LITERAL_INDICATOR_START in state 9 resolved as shift
WARNING: shift/reduce conflict for FOLD_INDICATOR_START in state 9 resolved as shift
WARNING: shift/reduce conflict for DOC_INDICATOR_END in state 23 resolved as shift

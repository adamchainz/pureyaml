Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> docs
Rule 1     docs -> DOC_INDICATOR_START doc DOC_INDICATOR_END
Rule 2     docs -> DOC_INDICATOR_START doc
Rule 3     docs -> docs DOC_INDICATOR_START doc DOC_INDICATOR_END
Rule 4     docs -> docs DOC_INDICATOR_START doc
Rule 5     docs -> doc
Rule 6     doc -> INDENT doc DEDENT
Rule 7     doc -> collection
Rule 8     doc -> scalar
Rule 9     collection -> sequence
Rule 10    collection -> map
Rule 11    map -> map_item
Rule 12    map -> map map_item
Rule 13    map_item -> scalar MAP_INDICATOR scalar
Rule 14    sequence -> sequence_item
Rule 15    sequence -> sequence sequence_item
Rule 16    sequence_item -> SEQUENCE_INDICATOR scalar
Rule 17    scalar -> CAST_TYPE scalar
Rule 18    scalar -> SCALAR
Rule 19    scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
Rule 20    scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
Rule 21    scalar_group -> SCALAR
Rule 22    scalar_group -> scalar_group SCALAR

Terminals, with rules where they appear

CAST_TYPE            : 17
DEDENT               : 6
DOC_INDICATOR_END    : 1 3
DOC_INDICATOR_START  : 1 2 3 4
FOLD_INDICATOR_END   : 20
FOLD_INDICATOR_START : 20
INDENT               : 6
LITERAL_INDICATOR_END : 19
LITERAL_INDICATOR_START : 19
MAP_INDICATOR        : 13
SCALAR               : 18 21 22
SEQUENCE_INDICATOR   : 16
error                : 

Nonterminals, with rules where they appear

collection           : 7
doc                  : 1 2 3 4 5 6
docs                 : 3 4 0
map                  : 10 12
map_item             : 11 12
scalar               : 8 13 13 16 17
scalar_group         : 19 20 22
sequence             : 9 15
sequence_item        : 14 15

Parsing method: LALR

state 0

    (0) S' -> . docs
    (1) docs -> . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (2) docs -> . DOC_INDICATOR_START doc
    (3) docs -> . docs DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) docs -> . docs DOC_INDICATOR_START doc
    (5) docs -> . doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (9) collection -> . sequence
    (10) collection -> . map
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (14) sequence -> . sequence_item
    (15) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (16) sequence_item -> . SEQUENCE_INDICATOR scalar
    (13) map_item -> . scalar MAP_INDICATOR scalar

    DOC_INDICATOR_START shift and go to state 11
    INDENT          shift and go to state 3
    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2
    SEQUENCE_INDICATOR shift and go to state 10

    map                            shift and go to state 1
    sequence                       shift and go to state 4
    docs                           shift and go to state 5
    collection                     shift and go to state 7
    scalar                         shift and go to state 9
    doc                            shift and go to state 12
    sequence_item                  shift and go to state 14
    map_item                       shift and go to state 15

state 1

    (10) collection -> map .
    (12) map -> map . map_item
    (13) map_item -> . scalar MAP_INDICATOR scalar
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    DOC_INDICATOR_START reduce using rule 10 (collection -> map .)
    $end            reduce using rule 10 (collection -> map .)
    DOC_INDICATOR_END reduce using rule 10 (collection -> map .)
    DEDENT          reduce using rule 10 (collection -> map .)
    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2

    scalar                         shift and go to state 16
    map_item                       shift and go to state 17

state 2

    (20) scalar -> FOLD_INDICATOR_START . scalar_group FOLD_INDICATOR_END
    (21) scalar_group -> . SCALAR
    (22) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 19

    scalar_group                   shift and go to state 18

state 3

    (6) doc -> INDENT . doc DEDENT
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (9) collection -> . sequence
    (10) collection -> . map
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (14) sequence -> . sequence_item
    (15) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (16) sequence_item -> . SEQUENCE_INDICATOR scalar
    (13) map_item -> . scalar MAP_INDICATOR scalar

    INDENT          shift and go to state 3
    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2
    SEQUENCE_INDICATOR shift and go to state 10

    map                            shift and go to state 1
    sequence                       shift and go to state 4
    doc                            shift and go to state 20
    collection                     shift and go to state 7
    scalar                         shift and go to state 9
    sequence_item                  shift and go to state 14
    map_item                       shift and go to state 15

state 4

    (9) collection -> sequence .
    (15) sequence -> sequence . sequence_item
    (16) sequence_item -> . SEQUENCE_INDICATOR scalar

    DOC_INDICATOR_START reduce using rule 9 (collection -> sequence .)
    $end            reduce using rule 9 (collection -> sequence .)
    DOC_INDICATOR_END reduce using rule 9 (collection -> sequence .)
    DEDENT          reduce using rule 9 (collection -> sequence .)
    SEQUENCE_INDICATOR shift and go to state 10

    sequence_item                  shift and go to state 21

state 5

    (0) S' -> docs .
    (3) docs -> docs . DOC_INDICATOR_START doc DOC_INDICATOR_END
    (4) docs -> docs . DOC_INDICATOR_START doc

    DOC_INDICATOR_START shift and go to state 22


state 6

    (18) scalar -> SCALAR .

    MAP_INDICATOR   reduce using rule 18 (scalar -> SCALAR .)
    DOC_INDICATOR_END reduce using rule 18 (scalar -> SCALAR .)
    DOC_INDICATOR_START reduce using rule 18 (scalar -> SCALAR .)
    $end            reduce using rule 18 (scalar -> SCALAR .)
    CAST_TYPE       reduce using rule 18 (scalar -> SCALAR .)
    SCALAR          reduce using rule 18 (scalar -> SCALAR .)
    LITERAL_INDICATOR_START reduce using rule 18 (scalar -> SCALAR .)
    FOLD_INDICATOR_START reduce using rule 18 (scalar -> SCALAR .)
    DEDENT          reduce using rule 18 (scalar -> SCALAR .)
    SEQUENCE_INDICATOR reduce using rule 18 (scalar -> SCALAR .)


state 7

    (7) doc -> collection .

    DOC_INDICATOR_START reduce using rule 7 (doc -> collection .)
    $end            reduce using rule 7 (doc -> collection .)
    DOC_INDICATOR_END reduce using rule 7 (doc -> collection .)
    DEDENT          reduce using rule 7 (doc -> collection .)


state 8

    (17) scalar -> CAST_TYPE . scalar
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2

    scalar                         shift and go to state 23

state 9

    (8) doc -> scalar .
    (13) map_item -> scalar . MAP_INDICATOR scalar

    DOC_INDICATOR_START reduce using rule 8 (doc -> scalar .)
    $end            reduce using rule 8 (doc -> scalar .)
    DOC_INDICATOR_END reduce using rule 8 (doc -> scalar .)
    DEDENT          reduce using rule 8 (doc -> scalar .)
    MAP_INDICATOR   shift and go to state 24


state 10

    (16) sequence_item -> SEQUENCE_INDICATOR . scalar
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2

    scalar                         shift and go to state 25

state 11

    (1) docs -> DOC_INDICATOR_START . doc DOC_INDICATOR_END
    (2) docs -> DOC_INDICATOR_START . doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (9) collection -> . sequence
    (10) collection -> . map
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (14) sequence -> . sequence_item
    (15) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (16) sequence_item -> . SEQUENCE_INDICATOR scalar
    (13) map_item -> . scalar MAP_INDICATOR scalar

    INDENT          shift and go to state 3
    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2
    SEQUENCE_INDICATOR shift and go to state 10

    map                            shift and go to state 1
    sequence                       shift and go to state 4
    doc                            shift and go to state 26
    collection                     shift and go to state 7
    scalar                         shift and go to state 9
    sequence_item                  shift and go to state 14
    map_item                       shift and go to state 15

state 12

    (5) docs -> doc .

    DOC_INDICATOR_START reduce using rule 5 (docs -> doc .)
    $end            reduce using rule 5 (docs -> doc .)


state 13

    (19) scalar -> LITERAL_INDICATOR_START . scalar_group LITERAL_INDICATOR_END
    (21) scalar_group -> . SCALAR
    (22) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 19

    scalar_group                   shift and go to state 27

state 14

    (14) sequence -> sequence_item .

    SEQUENCE_INDICATOR reduce using rule 14 (sequence -> sequence_item .)
    DOC_INDICATOR_START reduce using rule 14 (sequence -> sequence_item .)
    $end            reduce using rule 14 (sequence -> sequence_item .)
    DEDENT          reduce using rule 14 (sequence -> sequence_item .)
    DOC_INDICATOR_END reduce using rule 14 (sequence -> sequence_item .)


state 15

    (11) map -> map_item .

    CAST_TYPE       reduce using rule 11 (map -> map_item .)
    SCALAR          reduce using rule 11 (map -> map_item .)
    LITERAL_INDICATOR_START reduce using rule 11 (map -> map_item .)
    FOLD_INDICATOR_START reduce using rule 11 (map -> map_item .)
    DEDENT          reduce using rule 11 (map -> map_item .)
    DOC_INDICATOR_START reduce using rule 11 (map -> map_item .)
    $end            reduce using rule 11 (map -> map_item .)
    DOC_INDICATOR_END reduce using rule 11 (map -> map_item .)


state 16

    (13) map_item -> scalar . MAP_INDICATOR scalar

    MAP_INDICATOR   shift and go to state 24


state 17

    (12) map -> map map_item .

    CAST_TYPE       reduce using rule 12 (map -> map map_item .)
    SCALAR          reduce using rule 12 (map -> map map_item .)
    LITERAL_INDICATOR_START reduce using rule 12 (map -> map map_item .)
    FOLD_INDICATOR_START reduce using rule 12 (map -> map map_item .)
    DEDENT          reduce using rule 12 (map -> map map_item .)
    DOC_INDICATOR_START reduce using rule 12 (map -> map map_item .)
    $end            reduce using rule 12 (map -> map map_item .)
    DOC_INDICATOR_END reduce using rule 12 (map -> map map_item .)


state 18

    (20) scalar -> FOLD_INDICATOR_START scalar_group . FOLD_INDICATOR_END
    (22) scalar_group -> scalar_group . SCALAR

    FOLD_INDICATOR_END shift and go to state 29
    SCALAR          shift and go to state 28


state 19

    (21) scalar_group -> SCALAR .

    FOLD_INDICATOR_END reduce using rule 21 (scalar_group -> SCALAR .)
    SCALAR          reduce using rule 21 (scalar_group -> SCALAR .)
    LITERAL_INDICATOR_END reduce using rule 21 (scalar_group -> SCALAR .)


state 20

    (6) doc -> INDENT doc . DEDENT

    DEDENT          shift and go to state 30


state 21

    (15) sequence -> sequence sequence_item .

    SEQUENCE_INDICATOR reduce using rule 15 (sequence -> sequence sequence_item .)
    DOC_INDICATOR_START reduce using rule 15 (sequence -> sequence sequence_item .)
    $end            reduce using rule 15 (sequence -> sequence sequence_item .)
    DEDENT          reduce using rule 15 (sequence -> sequence sequence_item .)
    DOC_INDICATOR_END reduce using rule 15 (sequence -> sequence sequence_item .)


state 22

    (3) docs -> docs DOC_INDICATOR_START . doc DOC_INDICATOR_END
    (4) docs -> docs DOC_INDICATOR_START . doc
    (6) doc -> . INDENT doc DEDENT
    (7) doc -> . collection
    (8) doc -> . scalar
    (9) collection -> . sequence
    (10) collection -> . map
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END
    (14) sequence -> . sequence_item
    (15) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (16) sequence_item -> . SEQUENCE_INDICATOR scalar
    (13) map_item -> . scalar MAP_INDICATOR scalar

    INDENT          shift and go to state 3
    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2
    SEQUENCE_INDICATOR shift and go to state 10

    map                            shift and go to state 1
    sequence                       shift and go to state 4
    collection                     shift and go to state 7
    scalar                         shift and go to state 9
    doc                            shift and go to state 31
    sequence_item                  shift and go to state 14
    map_item                       shift and go to state 15

state 23

    (17) scalar -> CAST_TYPE scalar .

    MAP_INDICATOR   reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    DOC_INDICATOR_END reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    DOC_INDICATOR_START reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    $end            reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    CAST_TYPE       reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    SCALAR          reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    LITERAL_INDICATOR_START reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    FOLD_INDICATOR_START reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    DEDENT          reduce using rule 17 (scalar -> CAST_TYPE scalar .)
    SEQUENCE_INDICATOR reduce using rule 17 (scalar -> CAST_TYPE scalar .)


state 24

    (13) map_item -> scalar MAP_INDICATOR . scalar
    (17) scalar -> . CAST_TYPE scalar
    (18) scalar -> . SCALAR
    (19) scalar -> . LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END
    (20) scalar -> . FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END

    CAST_TYPE       shift and go to state 8
    SCALAR          shift and go to state 6
    LITERAL_INDICATOR_START shift and go to state 13
    FOLD_INDICATOR_START shift and go to state 2

    scalar                         shift and go to state 32

state 25

    (16) sequence_item -> SEQUENCE_INDICATOR scalar .

    SEQUENCE_INDICATOR reduce using rule 16 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DOC_INDICATOR_END reduce using rule 16 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DOC_INDICATOR_START reduce using rule 16 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    $end            reduce using rule 16 (sequence_item -> SEQUENCE_INDICATOR scalar .)
    DEDENT          reduce using rule 16 (sequence_item -> SEQUENCE_INDICATOR scalar .)


state 26

    (1) docs -> DOC_INDICATOR_START doc . DOC_INDICATOR_END
    (2) docs -> DOC_INDICATOR_START doc .

    DOC_INDICATOR_END shift and go to state 33
    DOC_INDICATOR_START reduce using rule 2 (docs -> DOC_INDICATOR_START doc .)
    $end            reduce using rule 2 (docs -> DOC_INDICATOR_START doc .)


state 27

    (19) scalar -> LITERAL_INDICATOR_START scalar_group . LITERAL_INDICATOR_END
    (22) scalar_group -> scalar_group . SCALAR

    LITERAL_INDICATOR_END shift and go to state 34
    SCALAR          shift and go to state 28


state 28

    (22) scalar_group -> scalar_group SCALAR .

    FOLD_INDICATOR_END reduce using rule 22 (scalar_group -> scalar_group SCALAR .)
    SCALAR          reduce using rule 22 (scalar_group -> scalar_group SCALAR .)
    LITERAL_INDICATOR_END reduce using rule 22 (scalar_group -> scalar_group SCALAR .)


state 29

    (20) scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .

    MAP_INDICATOR   reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DOC_INDICATOR_END reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DOC_INDICATOR_START reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    $end            reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    CAST_TYPE       reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    SCALAR          reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    LITERAL_INDICATOR_START reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    FOLD_INDICATOR_START reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    DEDENT          reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)
    SEQUENCE_INDICATOR reduce using rule 20 (scalar -> FOLD_INDICATOR_START scalar_group FOLD_INDICATOR_END .)


state 30

    (6) doc -> INDENT doc DEDENT .

    DOC_INDICATOR_START reduce using rule 6 (doc -> INDENT doc DEDENT .)
    $end            reduce using rule 6 (doc -> INDENT doc DEDENT .)
    DOC_INDICATOR_END reduce using rule 6 (doc -> INDENT doc DEDENT .)
    DEDENT          reduce using rule 6 (doc -> INDENT doc DEDENT .)


state 31

    (3) docs -> docs DOC_INDICATOR_START doc . DOC_INDICATOR_END
    (4) docs -> docs DOC_INDICATOR_START doc .

    DOC_INDICATOR_END shift and go to state 35
    DOC_INDICATOR_START reduce using rule 4 (docs -> docs DOC_INDICATOR_START doc .)
    $end            reduce using rule 4 (docs -> docs DOC_INDICATOR_START doc .)


state 32

    (13) map_item -> scalar MAP_INDICATOR scalar .

    CAST_TYPE       reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    SCALAR          reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    LITERAL_INDICATOR_START reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    FOLD_INDICATOR_START reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    DOC_INDICATOR_END reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    DOC_INDICATOR_START reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    $end            reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)
    DEDENT          reduce using rule 13 (map_item -> scalar MAP_INDICATOR scalar .)


state 33

    (1) docs -> DOC_INDICATOR_START doc DOC_INDICATOR_END .

    DOC_INDICATOR_START reduce using rule 1 (docs -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    $end            reduce using rule 1 (docs -> DOC_INDICATOR_START doc DOC_INDICATOR_END .)


state 34

    (19) scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .

    MAP_INDICATOR   reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DOC_INDICATOR_END reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DOC_INDICATOR_START reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    $end            reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    CAST_TYPE       reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    SCALAR          reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    LITERAL_INDICATOR_START reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    FOLD_INDICATOR_START reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    DEDENT          reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)
    SEQUENCE_INDICATOR reduce using rule 19 (scalar -> LITERAL_INDICATOR_START scalar_group LITERAL_INDICATOR_END .)


state 35

    (3) docs -> docs DOC_INDICATOR_START doc DOC_INDICATOR_END .

    DOC_INDICATOR_START reduce using rule 3 (docs -> docs DOC_INDICATOR_START doc DOC_INDICATOR_END .)
    $end            reduce using rule 3 (docs -> docs DOC_INDICATOR_START doc DOC_INDICATOR_END .)


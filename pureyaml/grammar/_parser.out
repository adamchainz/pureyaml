Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> docs
Rule 1     docs -> doc
Rule 2     docs -> docs doc
Rule 3     doc -> DOC_START doc DOC_END
Rule 4     doc -> DOC_START doc
Rule 5     doc -> INDENT doc DEDENT
Rule 6     doc -> collection
Rule 7     doc -> scalar
Rule 8     collection -> sequence
Rule 9     collection -> map
Rule 10    collection -> flow_collection
Rule 11    map -> map_item
Rule 12    map -> map map_item
Rule 13    map_item -> map_item_key map_item_value
Rule 14    map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
Rule 15    map_item_key -> B_MAP_KEY scalar
Rule 16    map_item_key -> scalar
Rule 17    map_item_key -> B_MAP_KEY INDENT collection DEDENT
Rule 18    map_item_value -> B_MAP_VALUE INDENT collection DEDENT
Rule 19    map_item_value -> B_MAP_VALUE flow_collection
Rule 20    map_item_value -> B_MAP_VALUE scalar
Rule 21    map_item_value -> B_MAP_VALUE sequence
Rule 22    sequence -> sequence_item
Rule 23    sequence -> sequence sequence_item
Rule 24    sequence_item -> B_SEQUENCE_START scalar
Rule 25    sequence_item -> B_SEQUENCE_START INDENT collection DEDENT
Rule 26    map_item_key -> B_MAP_COMPACT_KEY collection DEDENT
Rule 27    map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT
Rule 28    sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT
Rule 29    sequence_item -> B_SEQUENCE_START flow_collection
Rule 30    scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
Rule 31    scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
Rule 32    scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END
Rule 33    scalar -> SINGLEQUOTE_START SINGLEQUOTE_END
Rule 34    scalar -> CAST_TYPE scalar
Rule 35    scalar -> SCALAR
Rule 36    scalar -> B_LITERAL_START scalar_group B_LITERAL_END
Rule 37    scalar -> B_FOLD_START scalar_group B_FOLD_END
Rule 38    scalar -> INDENT scalar_group DEDENT
Rule 39    scalar_group -> SCALAR
Rule 40    scalar_group -> scalar_group SCALAR
Rule 41    flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END
Rule 42    flow_collection -> F_MAP_START flow_map F_MAP_END
Rule 43    flow_sequence -> flow_sequence_item
Rule 44    flow_sequence -> flow_sequence F_SEP flow_sequence_item
Rule 45    flow_sequence_item -> scalar
Rule 46    flow_map -> flow_map_item
Rule 47    flow_map -> flow_map F_SEP flow_map_item
Rule 48    flow_map_item -> flow_map_item_key flow_map_item_value
Rule 49    flow_map_item_key -> scalar F_MAP_KEY
Rule 50    flow_map_item_value -> scalar

Terminals, with rules where they appear

B_FOLD_END           : 37
B_FOLD_START         : 37
B_LITERAL_END        : 36
B_LITERAL_START      : 36
B_MAP_COMPACT_KEY    : 14 26
B_MAP_COMPACT_VALUE  : 27
B_MAP_KEY            : 15 17
B_MAP_VALUE          : 14 18 19 20 21
B_SEQUENCE_COMPACT_START : 28
B_SEQUENCE_START     : 24 25 29
CAST_TYPE            : 34
DEDENT               : 5 14 17 18 25 26 27 28 38
DOC_END              : 3
DOC_START            : 3 4
DOUBLEQUOTE_END      : 30 32
DOUBLEQUOTE_START    : 30 32
F_MAP_END            : 42
F_MAP_KEY            : 49
F_MAP_START          : 42
F_SEP                : 44 47
F_SEQUENCE_END       : 41
F_SEQUENCE_START     : 41
INDENT               : 5 17 18 25 38
SCALAR               : 30 31 35 39 40
SINGLEQUOTE_END      : 31 33
SINGLEQUOTE_START    : 31 33
error                : 

Nonterminals, with rules where they appear

collection           : 6 17 18 25 26 27 28
doc                  : 1 2 3 4 5
docs                 : 2 0
flow_collection      : 10 19 29
flow_map             : 42 47
flow_map_item        : 46 47
flow_map_item_key    : 48
flow_map_item_value  : 48
flow_sequence        : 41 44
flow_sequence_item   : 43 44
map                  : 9 12
map_item             : 11 12
map_item_key         : 13
map_item_value       : 13
scalar               : 7 14 14 15 16 20 24 34 45 49 50
scalar_group         : 36 37 38 40
sequence             : 8 21 23
sequence_item        : 22 23

Parsing method: LALR

state 0

    (0) S' -> . docs
    (1) docs -> . doc
    (2) docs -> . docs doc
    (3) doc -> . DOC_START doc DOC_END
    (4) doc -> . DOC_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 7
    INDENT          shift and go to state 17
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    docs                           shift and go to state 12
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 14
    scalar                         shift and go to state 4
    flow_collection                shift and go to state 16
    doc                            shift and go to state 19
    sequence_item                  shift and go to state 5
    map_item                       shift and go to state 6

state 1

    (8) collection -> sequence .
    (23) sequence -> sequence . sequence_item
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection

  ! shift/reduce conflict for B_SEQUENCE_START resolved as shift
  ! shift/reduce conflict for B_SEQUENCE_COMPACT_START resolved as shift
    DOC_END         reduce using rule 8 (collection -> sequence .)
    DOC_START       reduce using rule 8 (collection -> sequence .)
    INDENT          reduce using rule 8 (collection -> sequence .)
    DOUBLEQUOTE_START reduce using rule 8 (collection -> sequence .)
    SINGLEQUOTE_START reduce using rule 8 (collection -> sequence .)
    CAST_TYPE       reduce using rule 8 (collection -> sequence .)
    SCALAR          reduce using rule 8 (collection -> sequence .)
    B_LITERAL_START reduce using rule 8 (collection -> sequence .)
    B_FOLD_START    reduce using rule 8 (collection -> sequence .)
    F_SEQUENCE_START reduce using rule 8 (collection -> sequence .)
    F_MAP_START     reduce using rule 8 (collection -> sequence .)
    B_MAP_COMPACT_KEY reduce using rule 8 (collection -> sequence .)
    B_MAP_KEY       reduce using rule 8 (collection -> sequence .)
    $end            reduce using rule 8 (collection -> sequence .)
    DEDENT          reduce using rule 8 (collection -> sequence .)
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21

  ! B_SEQUENCE_START [ reduce using rule 8 (collection -> sequence .) ]
  ! B_SEQUENCE_COMPACT_START [ reduce using rule 8 (collection -> sequence .) ]

    sequence_item                  shift and go to state 25

state 2

    (37) scalar -> B_FOLD_START . scalar_group B_FOLD_END
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 26

    scalar_group                   shift and go to state 27

state 3

    (14) map_item -> B_MAP_COMPACT_KEY . scalar B_MAP_VALUE scalar DEDENT
    (26) map_item_key -> B_MAP_COMPACT_KEY . collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item                       shift and go to state 6
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 29
    scalar                         shift and go to state 28
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5

state 4

    (7) doc -> scalar .
    (16) map_item_key -> scalar .

    DOC_START       reduce using rule 7 (doc -> scalar .)
    INDENT          reduce using rule 7 (doc -> scalar .)
    DOUBLEQUOTE_START reduce using rule 7 (doc -> scalar .)
    SINGLEQUOTE_START reduce using rule 7 (doc -> scalar .)
    CAST_TYPE       reduce using rule 7 (doc -> scalar .)
    SCALAR          reduce using rule 7 (doc -> scalar .)
    B_LITERAL_START reduce using rule 7 (doc -> scalar .)
    B_FOLD_START    reduce using rule 7 (doc -> scalar .)
    F_SEQUENCE_START reduce using rule 7 (doc -> scalar .)
    F_MAP_START     reduce using rule 7 (doc -> scalar .)
    B_SEQUENCE_START reduce using rule 7 (doc -> scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 7 (doc -> scalar .)
    B_MAP_COMPACT_KEY reduce using rule 7 (doc -> scalar .)
    B_MAP_KEY       reduce using rule 7 (doc -> scalar .)
    $end            reduce using rule 7 (doc -> scalar .)
    DEDENT          reduce using rule 7 (doc -> scalar .)
    DOC_END         reduce using rule 7 (doc -> scalar .)
    B_MAP_VALUE     reduce using rule 16 (map_item_key -> scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 16 (map_item_key -> scalar .)


state 5

    (22) sequence -> sequence_item .

    B_SEQUENCE_START reduce using rule 22 (sequence -> sequence_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 22 (sequence -> sequence_item .)
    DOC_END         reduce using rule 22 (sequence -> sequence_item .)
    DOC_START       reduce using rule 22 (sequence -> sequence_item .)
    INDENT          reduce using rule 22 (sequence -> sequence_item .)
    DOUBLEQUOTE_START reduce using rule 22 (sequence -> sequence_item .)
    SINGLEQUOTE_START reduce using rule 22 (sequence -> sequence_item .)
    CAST_TYPE       reduce using rule 22 (sequence -> sequence_item .)
    SCALAR          reduce using rule 22 (sequence -> sequence_item .)
    B_LITERAL_START reduce using rule 22 (sequence -> sequence_item .)
    B_FOLD_START    reduce using rule 22 (sequence -> sequence_item .)
    F_SEQUENCE_START reduce using rule 22 (sequence -> sequence_item .)
    F_MAP_START     reduce using rule 22 (sequence -> sequence_item .)
    B_MAP_COMPACT_KEY reduce using rule 22 (sequence -> sequence_item .)
    B_MAP_KEY       reduce using rule 22 (sequence -> sequence_item .)
    $end            reduce using rule 22 (sequence -> sequence_item .)
    DEDENT          reduce using rule 22 (sequence -> sequence_item .)


state 6

    (11) map -> map_item .

    B_MAP_COMPACT_KEY reduce using rule 11 (map -> map_item .)
    B_MAP_KEY       reduce using rule 11 (map -> map_item .)
    DOUBLEQUOTE_START reduce using rule 11 (map -> map_item .)
    SINGLEQUOTE_START reduce using rule 11 (map -> map_item .)
    CAST_TYPE       reduce using rule 11 (map -> map_item .)
    SCALAR          reduce using rule 11 (map -> map_item .)
    B_LITERAL_START reduce using rule 11 (map -> map_item .)
    B_FOLD_START    reduce using rule 11 (map -> map_item .)
    INDENT          reduce using rule 11 (map -> map_item .)
    DEDENT          reduce using rule 11 (map -> map_item .)
    DOC_START       reduce using rule 11 (map -> map_item .)
    F_SEQUENCE_START reduce using rule 11 (map -> map_item .)
    F_MAP_START     reduce using rule 11 (map -> map_item .)
    B_SEQUENCE_START reduce using rule 11 (map -> map_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 11 (map -> map_item .)
    $end            reduce using rule 11 (map -> map_item .)
    DOC_END         reduce using rule 11 (map -> map_item .)


state 7

    (3) doc -> DOC_START . doc DOC_END
    (4) doc -> DOC_START . doc
    (3) doc -> . DOC_START doc DOC_END
    (4) doc -> . DOC_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 7
    INDENT          shift and go to state 17
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    doc                            shift and go to state 31
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 14
    scalar                         shift and go to state 4
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    map_item                       shift and go to state 6

state 8

    (13) map_item -> map_item_key . map_item_value
    (18) map_item_value -> . B_MAP_VALUE INDENT collection DEDENT
    (19) map_item_value -> . B_MAP_VALUE flow_collection
    (20) map_item_value -> . B_MAP_VALUE scalar
    (21) map_item_value -> . B_MAP_VALUE sequence
    (27) map_item_value -> . B_MAP_COMPACT_VALUE collection DEDENT

    B_MAP_VALUE     shift and go to state 33
    B_MAP_COMPACT_VALUE shift and go to state 32

    map_item_value                 shift and go to state 34

state 9

    (31) scalar -> SINGLEQUOTE_START . SCALAR SINGLEQUOTE_END
    (33) scalar -> SINGLEQUOTE_START . SINGLEQUOTE_END

    SCALAR          shift and go to state 36
    SINGLEQUOTE_END shift and go to state 35


state 10

    (15) map_item_key -> B_MAP_KEY . scalar
    (17) map_item_key -> B_MAP_KEY . INDENT collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    INDENT          shift and go to state 37
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2

    scalar                         shift and go to state 38

state 11

    (9) collection -> map .
    (12) map -> map . map_item
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

  ! shift/reduce conflict for B_MAP_COMPACT_KEY resolved as shift
  ! shift/reduce conflict for B_MAP_KEY resolved as shift
  ! shift/reduce conflict for DOUBLEQUOTE_START resolved as shift
  ! shift/reduce conflict for SINGLEQUOTE_START resolved as shift
  ! shift/reduce conflict for CAST_TYPE resolved as shift
  ! shift/reduce conflict for SCALAR resolved as shift
  ! shift/reduce conflict for B_LITERAL_START resolved as shift
  ! shift/reduce conflict for B_FOLD_START resolved as shift
  ! shift/reduce conflict for INDENT resolved as shift
    DOC_END         reduce using rule 9 (collection -> map .)
    DOC_START       reduce using rule 9 (collection -> map .)
    F_SEQUENCE_START reduce using rule 9 (collection -> map .)
    F_MAP_START     reduce using rule 9 (collection -> map .)
    B_SEQUENCE_START reduce using rule 9 (collection -> map .)
    B_SEQUENCE_COMPACT_START reduce using rule 9 (collection -> map .)
    $end            reduce using rule 9 (collection -> map .)
    DEDENT          reduce using rule 9 (collection -> map .)
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

  ! INDENT          [ reduce using rule 9 (collection -> map .) ]
  ! DOUBLEQUOTE_START [ reduce using rule 9 (collection -> map .) ]
  ! SINGLEQUOTE_START [ reduce using rule 9 (collection -> map .) ]
  ! CAST_TYPE       [ reduce using rule 9 (collection -> map .) ]
  ! SCALAR          [ reduce using rule 9 (collection -> map .) ]
  ! B_LITERAL_START [ reduce using rule 9 (collection -> map .) ]
  ! B_FOLD_START    [ reduce using rule 9 (collection -> map .) ]
  ! B_MAP_COMPACT_KEY [ reduce using rule 9 (collection -> map .) ]
  ! B_MAP_KEY       [ reduce using rule 9 (collection -> map .) ]

    map_item                       shift and go to state 40
    scalar                         shift and go to state 39
    map_item_key                   shift and go to state 8

state 12

    (0) S' -> docs .
    (2) docs -> docs . doc
    (3) doc -> . DOC_START doc DOC_END
    (4) doc -> . DOC_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 7
    INDENT          shift and go to state 17
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 14
    scalar                         shift and go to state 4
    flow_collection                shift and go to state 16
    doc                            shift and go to state 41
    sequence_item                  shift and go to state 5
    map_item                       shift and go to state 6

state 13

    (24) sequence_item -> B_SEQUENCE_START . scalar
    (25) sequence_item -> B_SEQUENCE_START . INDENT collection DEDENT
    (29) sequence_item -> B_SEQUENCE_START . flow_collection
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END

    INDENT          shift and go to state 44
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23

    scalar                         shift and go to state 42
    flow_collection                shift and go to state 43

state 14

    (6) doc -> collection .

    DOC_START       reduce using rule 6 (doc -> collection .)
    INDENT          reduce using rule 6 (doc -> collection .)
    DOUBLEQUOTE_START reduce using rule 6 (doc -> collection .)
    SINGLEQUOTE_START reduce using rule 6 (doc -> collection .)
    CAST_TYPE       reduce using rule 6 (doc -> collection .)
    SCALAR          reduce using rule 6 (doc -> collection .)
    B_LITERAL_START reduce using rule 6 (doc -> collection .)
    B_FOLD_START    reduce using rule 6 (doc -> collection .)
    F_SEQUENCE_START reduce using rule 6 (doc -> collection .)
    F_MAP_START     reduce using rule 6 (doc -> collection .)
    B_SEQUENCE_START reduce using rule 6 (doc -> collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 6 (doc -> collection .)
    B_MAP_COMPACT_KEY reduce using rule 6 (doc -> collection .)
    B_MAP_KEY       reduce using rule 6 (doc -> collection .)
    $end            reduce using rule 6 (doc -> collection .)
    DEDENT          reduce using rule 6 (doc -> collection .)
    DOC_END         reduce using rule 6 (doc -> collection .)


state 15

    (35) scalar -> SCALAR .

    F_MAP_END       reduce using rule 35 (scalar -> SCALAR .)
    F_SEP           reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_VALUE     reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_COMPACT_VALUE reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_COMPACT_KEY reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_KEY       reduce using rule 35 (scalar -> SCALAR .)
    DOUBLEQUOTE_START reduce using rule 35 (scalar -> SCALAR .)
    SINGLEQUOTE_START reduce using rule 35 (scalar -> SCALAR .)
    CAST_TYPE       reduce using rule 35 (scalar -> SCALAR .)
    SCALAR          reduce using rule 35 (scalar -> SCALAR .)
    B_LITERAL_START reduce using rule 35 (scalar -> SCALAR .)
    B_FOLD_START    reduce using rule 35 (scalar -> SCALAR .)
    INDENT          reduce using rule 35 (scalar -> SCALAR .)
    DOC_START       reduce using rule 35 (scalar -> SCALAR .)
    F_SEQUENCE_START reduce using rule 35 (scalar -> SCALAR .)
    F_MAP_START     reduce using rule 35 (scalar -> SCALAR .)
    B_SEQUENCE_START reduce using rule 35 (scalar -> SCALAR .)
    B_SEQUENCE_COMPACT_START reduce using rule 35 (scalar -> SCALAR .)
    $end            reduce using rule 35 (scalar -> SCALAR .)
    DEDENT          reduce using rule 35 (scalar -> SCALAR .)
    DOC_END         reduce using rule 35 (scalar -> SCALAR .)
    F_MAP_KEY       reduce using rule 35 (scalar -> SCALAR .)
    F_SEQUENCE_END  reduce using rule 35 (scalar -> SCALAR .)


state 16

    (10) collection -> flow_collection .

    DOC_END         reduce using rule 10 (collection -> flow_collection .)
    DOC_START       reduce using rule 10 (collection -> flow_collection .)
    INDENT          reduce using rule 10 (collection -> flow_collection .)
    DOUBLEQUOTE_START reduce using rule 10 (collection -> flow_collection .)
    SINGLEQUOTE_START reduce using rule 10 (collection -> flow_collection .)
    CAST_TYPE       reduce using rule 10 (collection -> flow_collection .)
    SCALAR          reduce using rule 10 (collection -> flow_collection .)
    B_LITERAL_START reduce using rule 10 (collection -> flow_collection .)
    B_FOLD_START    reduce using rule 10 (collection -> flow_collection .)
    F_SEQUENCE_START reduce using rule 10 (collection -> flow_collection .)
    F_MAP_START     reduce using rule 10 (collection -> flow_collection .)
    B_SEQUENCE_START reduce using rule 10 (collection -> flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 10 (collection -> flow_collection .)
    B_MAP_COMPACT_KEY reduce using rule 10 (collection -> flow_collection .)
    B_MAP_KEY       reduce using rule 10 (collection -> flow_collection .)
    $end            reduce using rule 10 (collection -> flow_collection .)
    DEDENT          reduce using rule 10 (collection -> flow_collection .)


state 17

    (5) doc -> INDENT . doc DEDENT
    (38) scalar -> INDENT . scalar_group DEDENT
    (3) doc -> . DOC_START doc DOC_END
    (4) doc -> . DOC_START doc
    (5) doc -> . INDENT doc DEDENT
    (6) doc -> . collection
    (7) doc -> . scalar
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT

    DOC_START       shift and go to state 7
    INDENT          shift and go to state 17
    SCALAR          shift and go to state 45
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    doc                            shift and go to state 46
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 14
    scalar                         shift and go to state 4
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    scalar_group                   shift and go to state 47
    map_item                       shift and go to state 6

state 18

    (30) scalar -> DOUBLEQUOTE_START . SCALAR DOUBLEQUOTE_END
    (32) scalar -> DOUBLEQUOTE_START . DOUBLEQUOTE_END

    SCALAR          shift and go to state 49
    DOUBLEQUOTE_END shift and go to state 48


state 19

    (1) docs -> doc .

    DOC_START       reduce using rule 1 (docs -> doc .)
    INDENT          reduce using rule 1 (docs -> doc .)
    DOUBLEQUOTE_START reduce using rule 1 (docs -> doc .)
    SINGLEQUOTE_START reduce using rule 1 (docs -> doc .)
    CAST_TYPE       reduce using rule 1 (docs -> doc .)
    SCALAR          reduce using rule 1 (docs -> doc .)
    B_LITERAL_START reduce using rule 1 (docs -> doc .)
    B_FOLD_START    reduce using rule 1 (docs -> doc .)
    F_SEQUENCE_START reduce using rule 1 (docs -> doc .)
    F_MAP_START     reduce using rule 1 (docs -> doc .)
    B_SEQUENCE_START reduce using rule 1 (docs -> doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 1 (docs -> doc .)
    B_MAP_COMPACT_KEY reduce using rule 1 (docs -> doc .)
    B_MAP_KEY       reduce using rule 1 (docs -> doc .)
    $end            reduce using rule 1 (docs -> doc .)


state 20

    (41) flow_collection -> F_SEQUENCE_START . flow_sequence F_SEQUENCE_END
    (43) flow_sequence -> . flow_sequence_item
    (44) flow_sequence -> . flow_sequence F_SEP flow_sequence_item
    (45) flow_sequence_item -> . scalar
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    flow_sequence_item             shift and go to state 50
    scalar                         shift and go to state 51
    flow_sequence                  shift and go to state 52

state 21

    (28) sequence_item -> B_SEQUENCE_COMPACT_START . collection DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 53
    scalar                         shift and go to state 39
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    map_item                       shift and go to state 6

state 22

    (34) scalar -> CAST_TYPE . scalar
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    scalar                         shift and go to state 54

state 23

    (42) flow_collection -> F_MAP_START . flow_map F_MAP_END
    (46) flow_map -> . flow_map_item
    (47) flow_map -> . flow_map F_SEP flow_map_item
    (48) flow_map_item -> . flow_map_item_key flow_map_item_value
    (49) flow_map_item_key -> . scalar F_MAP_KEY
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    flow_map                       shift and go to state 57
    flow_map_item                  shift and go to state 58
    flow_map_item_key              shift and go to state 55
    scalar                         shift and go to state 56

state 24

    (36) scalar -> B_LITERAL_START . scalar_group B_LITERAL_END
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 26

    scalar_group                   shift and go to state 59

state 25

    (23) sequence -> sequence sequence_item .

    B_SEQUENCE_START reduce using rule 23 (sequence -> sequence sequence_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 23 (sequence -> sequence sequence_item .)
    DOC_END         reduce using rule 23 (sequence -> sequence sequence_item .)
    DOC_START       reduce using rule 23 (sequence -> sequence sequence_item .)
    INDENT          reduce using rule 23 (sequence -> sequence sequence_item .)
    DOUBLEQUOTE_START reduce using rule 23 (sequence -> sequence sequence_item .)
    SINGLEQUOTE_START reduce using rule 23 (sequence -> sequence sequence_item .)
    CAST_TYPE       reduce using rule 23 (sequence -> sequence sequence_item .)
    SCALAR          reduce using rule 23 (sequence -> sequence sequence_item .)
    B_LITERAL_START reduce using rule 23 (sequence -> sequence sequence_item .)
    B_FOLD_START    reduce using rule 23 (sequence -> sequence sequence_item .)
    F_SEQUENCE_START reduce using rule 23 (sequence -> sequence sequence_item .)
    F_MAP_START     reduce using rule 23 (sequence -> sequence sequence_item .)
    B_MAP_COMPACT_KEY reduce using rule 23 (sequence -> sequence sequence_item .)
    B_MAP_KEY       reduce using rule 23 (sequence -> sequence sequence_item .)
    $end            reduce using rule 23 (sequence -> sequence sequence_item .)
    DEDENT          reduce using rule 23 (sequence -> sequence sequence_item .)


state 26

    (39) scalar_group -> SCALAR .

    B_FOLD_END      reduce using rule 39 (scalar_group -> SCALAR .)
    SCALAR          reduce using rule 39 (scalar_group -> SCALAR .)
    DEDENT          reduce using rule 39 (scalar_group -> SCALAR .)
    B_LITERAL_END   reduce using rule 39 (scalar_group -> SCALAR .)


state 27

    (37) scalar -> B_FOLD_START scalar_group . B_FOLD_END
    (40) scalar_group -> scalar_group . SCALAR

    B_FOLD_END      shift and go to state 61
    SCALAR          shift and go to state 60


state 28

    (14) map_item -> B_MAP_COMPACT_KEY scalar . B_MAP_VALUE scalar DEDENT
    (16) map_item_key -> scalar .

  ! shift/reduce conflict for B_MAP_VALUE resolved as shift
    B_MAP_VALUE     shift and go to state 62
    B_MAP_COMPACT_VALUE reduce using rule 16 (map_item_key -> scalar .)

  ! B_MAP_VALUE     [ reduce using rule 16 (map_item_key -> scalar .) ]


state 29

    (26) map_item_key -> B_MAP_COMPACT_KEY collection . DEDENT

    DEDENT          shift and go to state 63


state 30

    (38) scalar -> INDENT . scalar_group DEDENT
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR

    SCALAR          shift and go to state 26

    scalar_group                   shift and go to state 47

state 31

    (3) doc -> DOC_START doc . DOC_END
    (4) doc -> DOC_START doc .

  ! shift/reduce conflict for DOC_END resolved as shift
    DOC_END         shift and go to state 64
    DOC_START       reduce using rule 4 (doc -> DOC_START doc .)
    INDENT          reduce using rule 4 (doc -> DOC_START doc .)
    DOUBLEQUOTE_START reduce using rule 4 (doc -> DOC_START doc .)
    SINGLEQUOTE_START reduce using rule 4 (doc -> DOC_START doc .)
    CAST_TYPE       reduce using rule 4 (doc -> DOC_START doc .)
    SCALAR          reduce using rule 4 (doc -> DOC_START doc .)
    B_LITERAL_START reduce using rule 4 (doc -> DOC_START doc .)
    B_FOLD_START    reduce using rule 4 (doc -> DOC_START doc .)
    F_SEQUENCE_START reduce using rule 4 (doc -> DOC_START doc .)
    F_MAP_START     reduce using rule 4 (doc -> DOC_START doc .)
    B_SEQUENCE_START reduce using rule 4 (doc -> DOC_START doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 4 (doc -> DOC_START doc .)
    B_MAP_COMPACT_KEY reduce using rule 4 (doc -> DOC_START doc .)
    B_MAP_KEY       reduce using rule 4 (doc -> DOC_START doc .)
    $end            reduce using rule 4 (doc -> DOC_START doc .)
    DEDENT          reduce using rule 4 (doc -> DOC_START doc .)

  ! DOC_END         [ reduce using rule 4 (doc -> DOC_START doc .) ]


state 32

    (27) map_item_value -> B_MAP_COMPACT_VALUE . collection DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 65
    scalar                         shift and go to state 39
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    map_item                       shift and go to state 6

state 33

    (18) map_item_value -> B_MAP_VALUE . INDENT collection DEDENT
    (19) map_item_value -> B_MAP_VALUE . flow_collection
    (20) map_item_value -> B_MAP_VALUE . scalar
    (21) map_item_value -> B_MAP_VALUE . sequence
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection

    INDENT          shift and go to state 69
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21

    sequence                       shift and go to state 66
    scalar                         shift and go to state 67
    flow_collection                shift and go to state 68
    sequence_item                  shift and go to state 5

state 34

    (13) map_item -> map_item_key map_item_value .

    B_MAP_COMPACT_KEY reduce using rule 13 (map_item -> map_item_key map_item_value .)
    B_MAP_KEY       reduce using rule 13 (map_item -> map_item_key map_item_value .)
    DOUBLEQUOTE_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    SINGLEQUOTE_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    CAST_TYPE       reduce using rule 13 (map_item -> map_item_key map_item_value .)
    SCALAR          reduce using rule 13 (map_item -> map_item_key map_item_value .)
    B_LITERAL_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    B_FOLD_START    reduce using rule 13 (map_item -> map_item_key map_item_value .)
    INDENT          reduce using rule 13 (map_item -> map_item_key map_item_value .)
    DEDENT          reduce using rule 13 (map_item -> map_item_key map_item_value .)
    DOC_START       reduce using rule 13 (map_item -> map_item_key map_item_value .)
    F_SEQUENCE_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    F_MAP_START     reduce using rule 13 (map_item -> map_item_key map_item_value .)
    B_SEQUENCE_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    B_SEQUENCE_COMPACT_START reduce using rule 13 (map_item -> map_item_key map_item_value .)
    $end            reduce using rule 13 (map_item -> map_item_key map_item_value .)
    DOC_END         reduce using rule 13 (map_item -> map_item_key map_item_value .)


state 35

    (33) scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .

    F_MAP_END       reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEP           reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DEDENT          reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    CAST_TYPE       reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    SCALAR          reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_LITERAL_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_FOLD_START    reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    INDENT          reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOC_START       reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_MAP_START     reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    $end            reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    DOC_END         reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 33 (scalar -> SINGLEQUOTE_START SINGLEQUOTE_END .)


state 36

    (31) scalar -> SINGLEQUOTE_START SCALAR . SINGLEQUOTE_END

    SINGLEQUOTE_END shift and go to state 70


state 37

    (17) map_item_key -> B_MAP_KEY INDENT . collection DEDENT
    (38) scalar -> INDENT . scalar_group DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    SCALAR          shift and go to state 45
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item                       shift and go to state 6
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 71
    scalar                         shift and go to state 39
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    scalar_group                   shift and go to state 47

state 38

    (15) map_item_key -> B_MAP_KEY scalar .

    B_MAP_VALUE     reduce using rule 15 (map_item_key -> B_MAP_KEY scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 15 (map_item_key -> B_MAP_KEY scalar .)


state 39

    (16) map_item_key -> scalar .

    B_MAP_VALUE     reduce using rule 16 (map_item_key -> scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 16 (map_item_key -> scalar .)


state 40

    (12) map -> map map_item .

    B_MAP_COMPACT_KEY reduce using rule 12 (map -> map map_item .)
    B_MAP_KEY       reduce using rule 12 (map -> map map_item .)
    DOUBLEQUOTE_START reduce using rule 12 (map -> map map_item .)
    SINGLEQUOTE_START reduce using rule 12 (map -> map map_item .)
    CAST_TYPE       reduce using rule 12 (map -> map map_item .)
    SCALAR          reduce using rule 12 (map -> map map_item .)
    B_LITERAL_START reduce using rule 12 (map -> map map_item .)
    B_FOLD_START    reduce using rule 12 (map -> map map_item .)
    INDENT          reduce using rule 12 (map -> map map_item .)
    DEDENT          reduce using rule 12 (map -> map map_item .)
    DOC_START       reduce using rule 12 (map -> map map_item .)
    F_SEQUENCE_START reduce using rule 12 (map -> map map_item .)
    F_MAP_START     reduce using rule 12 (map -> map map_item .)
    B_SEQUENCE_START reduce using rule 12 (map -> map map_item .)
    B_SEQUENCE_COMPACT_START reduce using rule 12 (map -> map map_item .)
    $end            reduce using rule 12 (map -> map map_item .)
    DOC_END         reduce using rule 12 (map -> map map_item .)


state 41

    (2) docs -> docs doc .

    DOC_START       reduce using rule 2 (docs -> docs doc .)
    INDENT          reduce using rule 2 (docs -> docs doc .)
    DOUBLEQUOTE_START reduce using rule 2 (docs -> docs doc .)
    SINGLEQUOTE_START reduce using rule 2 (docs -> docs doc .)
    CAST_TYPE       reduce using rule 2 (docs -> docs doc .)
    SCALAR          reduce using rule 2 (docs -> docs doc .)
    B_LITERAL_START reduce using rule 2 (docs -> docs doc .)
    B_FOLD_START    reduce using rule 2 (docs -> docs doc .)
    F_SEQUENCE_START reduce using rule 2 (docs -> docs doc .)
    F_MAP_START     reduce using rule 2 (docs -> docs doc .)
    B_SEQUENCE_START reduce using rule 2 (docs -> docs doc .)
    B_SEQUENCE_COMPACT_START reduce using rule 2 (docs -> docs doc .)
    B_MAP_COMPACT_KEY reduce using rule 2 (docs -> docs doc .)
    B_MAP_KEY       reduce using rule 2 (docs -> docs doc .)
    $end            reduce using rule 2 (docs -> docs doc .)


state 42

    (24) sequence_item -> B_SEQUENCE_START scalar .

    B_SEQUENCE_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    DOC_START       reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    INDENT          reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    DOUBLEQUOTE_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    SINGLEQUOTE_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    CAST_TYPE       reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    SCALAR          reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    B_LITERAL_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    B_FOLD_START    reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    F_SEQUENCE_START reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    F_MAP_START     reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    B_MAP_COMPACT_KEY reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    B_MAP_KEY       reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    $end            reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    DEDENT          reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)
    DOC_END         reduce using rule 24 (sequence_item -> B_SEQUENCE_START scalar .)


state 43

    (29) sequence_item -> B_SEQUENCE_START flow_collection .

    B_SEQUENCE_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOC_START       reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    INDENT          reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOUBLEQUOTE_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    SINGLEQUOTE_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    CAST_TYPE       reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    SCALAR          reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_LITERAL_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_FOLD_START    reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    F_SEQUENCE_START reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    F_MAP_START     reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_MAP_COMPACT_KEY reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    B_MAP_KEY       reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    $end            reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DEDENT          reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)
    DOC_END         reduce using rule 29 (sequence_item -> B_SEQUENCE_START flow_collection .)


state 44

    (25) sequence_item -> B_SEQUENCE_START INDENT . collection DEDENT
    (38) scalar -> INDENT . scalar_group DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    SCALAR          shift and go to state 45
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item                       shift and go to state 6
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 72
    scalar                         shift and go to state 39
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    scalar_group                   shift and go to state 47

state 45

    (39) scalar_group -> SCALAR .
    (35) scalar -> SCALAR .

  ! reduce/reduce conflict for DEDENT resolved using rule 35 (scalar -> SCALAR .)
    SCALAR          reduce using rule 39 (scalar_group -> SCALAR .)
    DEDENT          reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_VALUE     reduce using rule 35 (scalar -> SCALAR .)
    B_MAP_COMPACT_VALUE reduce using rule 35 (scalar -> SCALAR .)

  ! DEDENT          [ reduce using rule 39 (scalar_group -> SCALAR .) ]


state 46

    (5) doc -> INDENT doc . DEDENT

    DEDENT          shift and go to state 73


state 47

    (38) scalar -> INDENT scalar_group . DEDENT
    (40) scalar_group -> scalar_group . SCALAR

    DEDENT          shift and go to state 74
    SCALAR          shift and go to state 60


state 48

    (32) scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .

    F_MAP_END       reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEP           reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DEDENT          reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    CAST_TYPE       reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    SCALAR          reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_LITERAL_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_FOLD_START    reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    INDENT          reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOC_START       reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_MAP_START     reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    $end            reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    DOC_END         reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 32 (scalar -> DOUBLEQUOTE_START DOUBLEQUOTE_END .)


state 49

    (30) scalar -> DOUBLEQUOTE_START SCALAR . DOUBLEQUOTE_END

    DOUBLEQUOTE_END shift and go to state 75


state 50

    (43) flow_sequence -> flow_sequence_item .

    F_SEQUENCE_END  reduce using rule 43 (flow_sequence -> flow_sequence_item .)
    F_SEP           reduce using rule 43 (flow_sequence -> flow_sequence_item .)


state 51

    (45) flow_sequence_item -> scalar .

    F_SEQUENCE_END  reduce using rule 45 (flow_sequence_item -> scalar .)
    F_SEP           reduce using rule 45 (flow_sequence_item -> scalar .)


state 52

    (41) flow_collection -> F_SEQUENCE_START flow_sequence . F_SEQUENCE_END
    (44) flow_sequence -> flow_sequence . F_SEP flow_sequence_item

    F_SEQUENCE_END  shift and go to state 77
    F_SEP           shift and go to state 76


state 53

    (28) sequence_item -> B_SEQUENCE_COMPACT_START collection . DEDENT

    DEDENT          shift and go to state 78


state 54

    (34) scalar -> CAST_TYPE scalar .

    F_MAP_END       reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    F_SEP           reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_MAP_VALUE     reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_MAP_COMPACT_VALUE reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    DEDENT          reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_MAP_COMPACT_KEY reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_MAP_KEY       reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    DOUBLEQUOTE_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    SINGLEQUOTE_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    CAST_TYPE       reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    SCALAR          reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_LITERAL_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_FOLD_START    reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    INDENT          reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    DOC_START       reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    F_SEQUENCE_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    F_MAP_START     reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_SEQUENCE_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    $end            reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    DOC_END         reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    F_MAP_KEY       reduce using rule 34 (scalar -> CAST_TYPE scalar .)
    F_SEQUENCE_END  reduce using rule 34 (scalar -> CAST_TYPE scalar .)


state 55

    (48) flow_map_item -> flow_map_item_key . flow_map_item_value
    (50) flow_map_item_value -> . scalar
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    flow_map_item_value            shift and go to state 79
    scalar                         shift and go to state 80

state 56

    (49) flow_map_item_key -> scalar . F_MAP_KEY

    F_MAP_KEY       shift and go to state 81


state 57

    (42) flow_collection -> F_MAP_START flow_map . F_MAP_END
    (47) flow_map -> flow_map . F_SEP flow_map_item

    F_MAP_END       shift and go to state 83
    F_SEP           shift and go to state 82


state 58

    (46) flow_map -> flow_map_item .

    F_MAP_END       reduce using rule 46 (flow_map -> flow_map_item .)
    F_SEP           reduce using rule 46 (flow_map -> flow_map_item .)


state 59

    (36) scalar -> B_LITERAL_START scalar_group . B_LITERAL_END
    (40) scalar_group -> scalar_group . SCALAR

    B_LITERAL_END   shift and go to state 84
    SCALAR          shift and go to state 60


state 60

    (40) scalar_group -> scalar_group SCALAR .

    B_FOLD_END      reduce using rule 40 (scalar_group -> scalar_group SCALAR .)
    SCALAR          reduce using rule 40 (scalar_group -> scalar_group SCALAR .)
    DEDENT          reduce using rule 40 (scalar_group -> scalar_group SCALAR .)
    B_LITERAL_END   reduce using rule 40 (scalar_group -> scalar_group SCALAR .)


state 61

    (37) scalar -> B_FOLD_START scalar_group B_FOLD_END .

    F_MAP_END       reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEP           reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_VALUE     reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_COMPACT_VALUE reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DEDENT          reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_COMPACT_KEY reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_MAP_KEY       reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOUBLEQUOTE_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    SINGLEQUOTE_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    CAST_TYPE       reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    SCALAR          reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_LITERAL_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_FOLD_START    reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    INDENT          reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOC_START       reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEQUENCE_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_MAP_START     reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_SEQUENCE_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    $end            reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    DOC_END         reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_MAP_KEY       reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)
    F_SEQUENCE_END  reduce using rule 37 (scalar -> B_FOLD_START scalar_group B_FOLD_END .)


state 62

    (14) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE . scalar DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    scalar                         shift and go to state 85

state 63

    (26) map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .

    B_MAP_VALUE     reduce using rule 26 (map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 26 (map_item_key -> B_MAP_COMPACT_KEY collection DEDENT .)


state 64

    (3) doc -> DOC_START doc DOC_END .

    DOC_START       reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    INDENT          reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    DOUBLEQUOTE_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    SINGLEQUOTE_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    CAST_TYPE       reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    SCALAR          reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_LITERAL_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_FOLD_START    reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    F_SEQUENCE_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    F_MAP_START     reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_SEQUENCE_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_MAP_COMPACT_KEY reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    B_MAP_KEY       reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    $end            reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    DEDENT          reduce using rule 3 (doc -> DOC_START doc DOC_END .)
    DOC_END         reduce using rule 3 (doc -> DOC_START doc DOC_END .)


state 65

    (27) map_item_value -> B_MAP_COMPACT_VALUE collection . DEDENT

    DEDENT          shift and go to state 86


state 66

    (21) map_item_value -> B_MAP_VALUE sequence .
    (23) sequence -> sequence . sequence_item
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection

  ! shift/reduce conflict for B_SEQUENCE_START resolved as shift
  ! shift/reduce conflict for B_SEQUENCE_COMPACT_START resolved as shift
    B_MAP_COMPACT_KEY reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    B_MAP_KEY       reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    DOUBLEQUOTE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    SINGLEQUOTE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    CAST_TYPE       reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    SCALAR          reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    B_LITERAL_START reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    B_FOLD_START    reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    INDENT          reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    DOC_START       reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    F_SEQUENCE_START reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    F_MAP_START     reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    $end            reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    DEDENT          reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    DOC_END         reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .)
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21

  ! B_SEQUENCE_START [ reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .) ]
  ! B_SEQUENCE_COMPACT_START [ reduce using rule 21 (map_item_value -> B_MAP_VALUE sequence .) ]

    sequence_item                  shift and go to state 25

state 67

    (20) map_item_value -> B_MAP_VALUE scalar .

    B_MAP_COMPACT_KEY reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    B_MAP_KEY       reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    DOUBLEQUOTE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    SINGLEQUOTE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    CAST_TYPE       reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    SCALAR          reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    B_LITERAL_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    B_FOLD_START    reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    INDENT          reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    DOC_START       reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    F_SEQUENCE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    F_MAP_START     reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    B_SEQUENCE_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    B_SEQUENCE_COMPACT_START reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    $end            reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    DEDENT          reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)
    DOC_END         reduce using rule 20 (map_item_value -> B_MAP_VALUE scalar .)


state 68

    (19) map_item_value -> B_MAP_VALUE flow_collection .

    B_MAP_COMPACT_KEY reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_MAP_KEY       reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOUBLEQUOTE_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    SINGLEQUOTE_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    CAST_TYPE       reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    SCALAR          reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_LITERAL_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_FOLD_START    reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    INDENT          reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOC_START       reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    F_SEQUENCE_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    F_MAP_START     reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_SEQUENCE_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    B_SEQUENCE_COMPACT_START reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    $end            reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    DEDENT          reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)
    DOC_END         reduce using rule 19 (map_item_value -> B_MAP_VALUE flow_collection .)


state 69

    (18) map_item_value -> B_MAP_VALUE INDENT . collection DEDENT
    (38) scalar -> INDENT . scalar_group DEDENT
    (8) collection -> . sequence
    (9) collection -> . map
    (10) collection -> . flow_collection
    (39) scalar_group -> . SCALAR
    (40) scalar_group -> . scalar_group SCALAR
    (22) sequence -> . sequence_item
    (23) sequence -> . sequence sequence_item
    (11) map -> . map_item
    (12) map -> . map map_item
    (41) flow_collection -> . F_SEQUENCE_START flow_sequence F_SEQUENCE_END
    (42) flow_collection -> . F_MAP_START flow_map F_MAP_END
    (24) sequence_item -> . B_SEQUENCE_START scalar
    (25) sequence_item -> . B_SEQUENCE_START INDENT collection DEDENT
    (28) sequence_item -> . B_SEQUENCE_COMPACT_START collection DEDENT
    (29) sequence_item -> . B_SEQUENCE_START flow_collection
    (13) map_item -> . map_item_key map_item_value
    (14) map_item -> . B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT
    (15) map_item_key -> . B_MAP_KEY scalar
    (16) map_item_key -> . scalar
    (17) map_item_key -> . B_MAP_KEY INDENT collection DEDENT
    (26) map_item_key -> . B_MAP_COMPACT_KEY collection DEDENT
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    SCALAR          shift and go to state 45
    F_SEQUENCE_START shift and go to state 20
    F_MAP_START     shift and go to state 23
    B_SEQUENCE_START shift and go to state 13
    B_SEQUENCE_COMPACT_START shift and go to state 21
    B_MAP_COMPACT_KEY shift and go to state 3
    B_MAP_KEY       shift and go to state 10
    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    map                            shift and go to state 11
    sequence                       shift and go to state 1
    map_item                       shift and go to state 6
    map_item_key                   shift and go to state 8
    collection                     shift and go to state 87
    scalar                         shift and go to state 39
    flow_collection                shift and go to state 16
    sequence_item                  shift and go to state 5
    scalar_group                   shift and go to state 47

state 70

    (31) scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .

    F_MAP_END       reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEP           reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DEDENT          reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    CAST_TYPE       reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    SCALAR          reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_LITERAL_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_FOLD_START    reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    INDENT          reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOC_START       reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_MAP_START     reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    $end            reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    DOC_END         reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 31 (scalar -> SINGLEQUOTE_START SCALAR SINGLEQUOTE_END .)


state 71

    (17) map_item_key -> B_MAP_KEY INDENT collection . DEDENT

    DEDENT          shift and go to state 88


state 72

    (25) sequence_item -> B_SEQUENCE_START INDENT collection . DEDENT

    DEDENT          shift and go to state 89


state 73

    (5) doc -> INDENT doc DEDENT .

    DOC_START       reduce using rule 5 (doc -> INDENT doc DEDENT .)
    INDENT          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    DOUBLEQUOTE_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    SINGLEQUOTE_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    CAST_TYPE       reduce using rule 5 (doc -> INDENT doc DEDENT .)
    SCALAR          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_LITERAL_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_FOLD_START    reduce using rule 5 (doc -> INDENT doc DEDENT .)
    F_SEQUENCE_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    F_MAP_START     reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_SEQUENCE_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 5 (doc -> INDENT doc DEDENT .)
    B_MAP_KEY       reduce using rule 5 (doc -> INDENT doc DEDENT .)
    $end            reduce using rule 5 (doc -> INDENT doc DEDENT .)
    DEDENT          reduce using rule 5 (doc -> INDENT doc DEDENT .)
    DOC_END         reduce using rule 5 (doc -> INDENT doc DEDENT .)


state 74

    (38) scalar -> INDENT scalar_group DEDENT .

    F_MAP_END       reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    F_SEP           reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_VALUE     reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    DEDENT          reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_MAP_KEY       reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    DOUBLEQUOTE_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    SINGLEQUOTE_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    CAST_TYPE       reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    SCALAR          reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_LITERAL_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_FOLD_START    reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    INDENT          reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    DOC_START       reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    F_SEQUENCE_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    F_MAP_START     reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_SEQUENCE_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    $end            reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    DOC_END         reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    F_MAP_KEY       reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)
    F_SEQUENCE_END  reduce using rule 38 (scalar -> INDENT scalar_group DEDENT .)


state 75

    (30) scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .

    F_MAP_END       reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEP           reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_VALUE     reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_COMPACT_VALUE reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DEDENT          reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_COMPACT_KEY reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_MAP_KEY       reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOUBLEQUOTE_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    SINGLEQUOTE_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    CAST_TYPE       reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    SCALAR          reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_LITERAL_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_FOLD_START    reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    INDENT          reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOC_START       reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEQUENCE_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_MAP_START     reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_SEQUENCE_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    $end            reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    DOC_END         reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_MAP_KEY       reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)
    F_SEQUENCE_END  reduce using rule 30 (scalar -> DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END .)


state 76

    (44) flow_sequence -> flow_sequence F_SEP . flow_sequence_item
    (45) flow_sequence_item -> . scalar
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    flow_sequence_item             shift and go to state 90
    scalar                         shift and go to state 51

state 77

    (41) flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .

    DEDENT          reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_SEQUENCE_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOC_START       reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    INDENT          reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOUBLEQUOTE_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    SINGLEQUOTE_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    CAST_TYPE       reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    SCALAR          reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_LITERAL_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_FOLD_START    reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    F_SEQUENCE_START reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    F_MAP_START     reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_MAP_COMPACT_KEY reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    B_MAP_KEY       reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    $end            reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)
    DOC_END         reduce using rule 41 (flow_collection -> F_SEQUENCE_START flow_sequence F_SEQUENCE_END .)


state 78

    (28) sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .

    B_SEQUENCE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOC_START       reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    INDENT          reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    CAST_TYPE       reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    SCALAR          reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_LITERAL_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_FOLD_START    reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    F_SEQUENCE_START reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    F_MAP_START     reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    B_MAP_KEY       reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    $end            reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DEDENT          reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)
    DOC_END         reduce using rule 28 (sequence_item -> B_SEQUENCE_COMPACT_START collection DEDENT .)


state 79

    (48) flow_map_item -> flow_map_item_key flow_map_item_value .

    F_MAP_END       reduce using rule 48 (flow_map_item -> flow_map_item_key flow_map_item_value .)
    F_SEP           reduce using rule 48 (flow_map_item -> flow_map_item_key flow_map_item_value .)


state 80

    (50) flow_map_item_value -> scalar .

    F_MAP_END       reduce using rule 50 (flow_map_item_value -> scalar .)
    F_SEP           reduce using rule 50 (flow_map_item_value -> scalar .)


state 81

    (49) flow_map_item_key -> scalar F_MAP_KEY .

    DOUBLEQUOTE_START reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    SINGLEQUOTE_START reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    CAST_TYPE       reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    SCALAR          reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    B_LITERAL_START reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    B_FOLD_START    reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)
    INDENT          reduce using rule 49 (flow_map_item_key -> scalar F_MAP_KEY .)


state 82

    (47) flow_map -> flow_map F_SEP . flow_map_item
    (48) flow_map_item -> . flow_map_item_key flow_map_item_value
    (49) flow_map_item_key -> . scalar F_MAP_KEY
    (30) scalar -> . DOUBLEQUOTE_START SCALAR DOUBLEQUOTE_END
    (31) scalar -> . SINGLEQUOTE_START SCALAR SINGLEQUOTE_END
    (32) scalar -> . DOUBLEQUOTE_START DOUBLEQUOTE_END
    (33) scalar -> . SINGLEQUOTE_START SINGLEQUOTE_END
    (34) scalar -> . CAST_TYPE scalar
    (35) scalar -> . SCALAR
    (36) scalar -> . B_LITERAL_START scalar_group B_LITERAL_END
    (37) scalar -> . B_FOLD_START scalar_group B_FOLD_END
    (38) scalar -> . INDENT scalar_group DEDENT

    DOUBLEQUOTE_START shift and go to state 18
    SINGLEQUOTE_START shift and go to state 9
    CAST_TYPE       shift and go to state 22
    SCALAR          shift and go to state 15
    B_LITERAL_START shift and go to state 24
    B_FOLD_START    shift and go to state 2
    INDENT          shift and go to state 30

    flow_map_item                  shift and go to state 91
    flow_map_item_key              shift and go to state 55
    scalar                         shift and go to state 56

state 83

    (42) flow_collection -> F_MAP_START flow_map F_MAP_END .

    DEDENT          reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_SEQUENCE_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOC_START       reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    INDENT          reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOUBLEQUOTE_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    SINGLEQUOTE_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    CAST_TYPE       reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    SCALAR          reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_LITERAL_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_FOLD_START    reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    F_SEQUENCE_START reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    F_MAP_START     reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_MAP_COMPACT_KEY reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    B_MAP_KEY       reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    $end            reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)
    DOC_END         reduce using rule 42 (flow_collection -> F_MAP_START flow_map F_MAP_END .)


state 84

    (36) scalar -> B_LITERAL_START scalar_group B_LITERAL_END .

    F_MAP_END       reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEP           reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_VALUE     reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_COMPACT_VALUE reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DEDENT          reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_COMPACT_KEY reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_MAP_KEY       reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOUBLEQUOTE_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    SINGLEQUOTE_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    CAST_TYPE       reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    SCALAR          reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_LITERAL_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_FOLD_START    reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    INDENT          reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOC_START       reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEQUENCE_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_MAP_START     reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_SEQUENCE_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    B_SEQUENCE_COMPACT_START reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    $end            reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    DOC_END         reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_MAP_KEY       reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)
    F_SEQUENCE_END  reduce using rule 36 (scalar -> B_LITERAL_START scalar_group B_LITERAL_END .)


state 85

    (14) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar . DEDENT

    DEDENT          shift and go to state 92


state 86

    (27) map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_MAP_KEY       reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    CAST_TYPE       reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    SCALAR          reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_LITERAL_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_FOLD_START    reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    INDENT          reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOC_START       reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    F_SEQUENCE_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    F_MAP_START     reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_SEQUENCE_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    $end            reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DEDENT          reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)
    DOC_END         reduce using rule 27 (map_item_value -> B_MAP_COMPACT_VALUE collection DEDENT .)


state 87

    (18) map_item_value -> B_MAP_VALUE INDENT collection . DEDENT

    DEDENT          shift and go to state 93


state 88

    (17) map_item_key -> B_MAP_KEY INDENT collection DEDENT .

    B_MAP_VALUE     reduce using rule 17 (map_item_key -> B_MAP_KEY INDENT collection DEDENT .)
    B_MAP_COMPACT_VALUE reduce using rule 17 (map_item_key -> B_MAP_KEY INDENT collection DEDENT .)


state 89

    (25) sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .

    B_SEQUENCE_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOC_START       reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    INDENT          reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    CAST_TYPE       reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    SCALAR          reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_LITERAL_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_FOLD_START    reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    F_SEQUENCE_START reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    F_MAP_START     reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_MAP_COMPACT_KEY reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    B_MAP_KEY       reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    $end            reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DEDENT          reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)
    DOC_END         reduce using rule 25 (sequence_item -> B_SEQUENCE_START INDENT collection DEDENT .)


state 90

    (44) flow_sequence -> flow_sequence F_SEP flow_sequence_item .

    F_SEQUENCE_END  reduce using rule 44 (flow_sequence -> flow_sequence F_SEP flow_sequence_item .)
    F_SEP           reduce using rule 44 (flow_sequence -> flow_sequence F_SEP flow_sequence_item .)


state 91

    (47) flow_map -> flow_map F_SEP flow_map_item .

    F_MAP_END       reduce using rule 47 (flow_map -> flow_map F_SEP flow_map_item .)
    F_SEP           reduce using rule 47 (flow_map -> flow_map F_SEP flow_map_item .)


state 92

    (14) map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_MAP_KEY       reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOUBLEQUOTE_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    SINGLEQUOTE_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    CAST_TYPE       reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    SCALAR          reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_LITERAL_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_FOLD_START    reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    INDENT          reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DEDENT          reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOC_START       reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    F_SEQUENCE_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    F_MAP_START     reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_SEQUENCE_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    $end            reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)
    DOC_END         reduce using rule 14 (map_item -> B_MAP_COMPACT_KEY scalar B_MAP_VALUE scalar DEDENT .)


state 93

    (18) map_item_value -> B_MAP_VALUE INDENT collection DEDENT .

    B_MAP_COMPACT_KEY reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_MAP_KEY       reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOUBLEQUOTE_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    SINGLEQUOTE_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    CAST_TYPE       reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    SCALAR          reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_LITERAL_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_FOLD_START    reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    INDENT          reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOC_START       reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    F_SEQUENCE_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    F_MAP_START     reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_SEQUENCE_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    B_SEQUENCE_COMPACT_START reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    $end            reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DEDENT          reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)
    DOC_END         reduce using rule 18 (map_item_value -> B_MAP_VALUE INDENT collection DEDENT .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for B_SEQUENCE_START in state 1 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_COMPACT_START in state 1 resolved as shift
WARNING: shift/reduce conflict for B_MAP_COMPACT_KEY in state 11 resolved as shift
WARNING: shift/reduce conflict for B_MAP_KEY in state 11 resolved as shift
WARNING: shift/reduce conflict for DOUBLEQUOTE_START in state 11 resolved as shift
WARNING: shift/reduce conflict for SINGLEQUOTE_START in state 11 resolved as shift
WARNING: shift/reduce conflict for CAST_TYPE in state 11 resolved as shift
WARNING: shift/reduce conflict for SCALAR in state 11 resolved as shift
WARNING: shift/reduce conflict for B_LITERAL_START in state 11 resolved as shift
WARNING: shift/reduce conflict for B_FOLD_START in state 11 resolved as shift
WARNING: shift/reduce conflict for INDENT in state 11 resolved as shift
WARNING: shift/reduce conflict for B_MAP_VALUE in state 28 resolved as shift
WARNING: shift/reduce conflict for DOC_END in state 31 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_START in state 66 resolved as shift
WARNING: shift/reduce conflict for B_SEQUENCE_COMPACT_START in state 66 resolved as shift
WARNING: reduce/reduce conflict in state 45 resolved using rule (scalar -> SCALAR)
WARNING: rejected rule (scalar_group -> SCALAR) in state 45

Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    INT

Grammar

Rule 0     S' -> docs
Rule 1     docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs
Rule 2     docs -> DOC_START_INDICATOR doc docs
Rule 3     docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR
Rule 4     docs -> DOC_START_INDICATOR doc
Rule 5     doc -> scalar
Rule 6     scalar -> STRING

Terminals, with rules where they appear

DOC_END_INDICATOR    : 1 3
DOC_START_INDICATOR  : 1 2 3 4
INT                  : 
STRING               : 6
error                : 

Nonterminals, with rules where they appear

doc                  : 1 2 3 4
docs                 : 1 2 0
scalar               : 5

Parsing method: LALR

state 0

    (0) S' -> . docs
    (1) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR docs
    (2) docs -> . DOC_START_INDICATOR doc docs
    (3) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR
    (4) docs -> . DOC_START_INDICATOR doc

    DOC_START_INDICATOR shift and go to state 2

    docs                           shift and go to state 1

state 1

    (0) S' -> docs .



state 2

    (1) docs -> DOC_START_INDICATOR . doc DOC_END_INDICATOR docs
    (2) docs -> DOC_START_INDICATOR . doc docs
    (3) docs -> DOC_START_INDICATOR . doc DOC_END_INDICATOR
    (4) docs -> DOC_START_INDICATOR . doc
    (5) doc -> . scalar
    (6) scalar -> . STRING

    STRING          shift and go to state 3

    doc                            shift and go to state 4
    scalar                         shift and go to state 5

state 3

    (6) scalar -> STRING .

    DOC_END_INDICATOR reduce using rule 6 (scalar -> STRING .)
    DOC_START_INDICATOR reduce using rule 6 (scalar -> STRING .)
    $end            reduce using rule 6 (scalar -> STRING .)


state 4

    (1) docs -> DOC_START_INDICATOR doc . DOC_END_INDICATOR docs
    (2) docs -> DOC_START_INDICATOR doc . docs
    (3) docs -> DOC_START_INDICATOR doc . DOC_END_INDICATOR
    (4) docs -> DOC_START_INDICATOR doc .
    (1) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR docs
    (2) docs -> . DOC_START_INDICATOR doc docs
    (3) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR
    (4) docs -> . DOC_START_INDICATOR doc

    DOC_END_INDICATOR shift and go to state 6
    $end            reduce using rule 4 (docs -> DOC_START_INDICATOR doc .)
    DOC_START_INDICATOR shift and go to state 2

    docs                           shift and go to state 7

state 5

    (5) doc -> scalar .

    DOC_END_INDICATOR reduce using rule 5 (doc -> scalar .)
    DOC_START_INDICATOR reduce using rule 5 (doc -> scalar .)
    $end            reduce using rule 5 (doc -> scalar .)


state 6

    (1) docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR . docs
    (3) docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR .
    (1) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR docs
    (2) docs -> . DOC_START_INDICATOR doc docs
    (3) docs -> . DOC_START_INDICATOR doc DOC_END_INDICATOR
    (4) docs -> . DOC_START_INDICATOR doc

    $end            reduce using rule 3 (docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR .)
    DOC_START_INDICATOR shift and go to state 2

    docs                           shift and go to state 8

state 7

    (2) docs -> DOC_START_INDICATOR doc docs .

    $end            reduce using rule 2 (docs -> DOC_START_INDICATOR doc docs .)


state 8

    (1) docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs .

    $end            reduce using rule 1 (docs -> DOC_START_INDICATOR doc DOC_END_INDICATOR docs .)

